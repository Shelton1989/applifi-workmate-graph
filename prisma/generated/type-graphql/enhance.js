"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.applyInputTypesEnhanceMap = exports.applyOutputTypesEnhanceMap = exports.applyModelsEnhanceMap = exports.applyRelationResolversEnhanceMap = exports.applyArgsTypesEnhanceMap = exports.applyResolversEnhanceMap = void 0;
const tslib_1 = require("tslib");
const tslib = tslib_1.__importStar(require("tslib"));
const crudResolvers = tslib_1.__importStar(require("./resolvers/crud/resolvers-crud.index"));
const argsTypes = tslib_1.__importStar(require("./resolvers/crud/args.index"));
const actionResolvers = tslib_1.__importStar(require("./resolvers/crud/resolvers-actions.index"));
const relationResolvers = tslib_1.__importStar(require("./resolvers/relations/resolvers.index"));
const models = tslib_1.__importStar(require("./models"));
const outputTypes = tslib_1.__importStar(require("./resolvers/outputs"));
const inputTypes = tslib_1.__importStar(require("./resolvers/inputs"));
const crudResolversMap = {
    User: crudResolvers.UserCrudResolver,
    Inventory: crudResolvers.InventoryCrudResolver,
    Address: crudResolvers.AddressCrudResolver,
    NotificationSettings: crudResolvers.NotificationSettingsCrudResolver,
    Artwork: crudResolvers.ArtworkCrudResolver,
    Color: crudResolvers.ColorCrudResolver,
    Size: crudResolvers.SizeCrudResolver,
    Brand: crudResolvers.BrandCrudResolver,
    BrandProduct: crudResolvers.BrandProductCrudResolver,
    Product: crudResolvers.ProductCrudResolver,
    Currency: crudResolvers.CurrencyCrudResolver,
    Price: crudResolvers.PriceCrudResolver,
    ShippingMethod: crudResolvers.ShippingMethodCrudResolver,
    Post: crudResolvers.PostCrudResolver,
    Comment: crudResolvers.CommentCrudResolver,
    Reply: crudResolvers.ReplyCrudResolver,
    Reaction: crudResolvers.ReactionCrudResolver,
    OrderLineItem: crudResolvers.OrderLineItemCrudResolver,
    Order: crudResolvers.OrderCrudResolver
};
const actionResolversMap = {
    User: {
        user: actionResolvers.FindUniqueUserResolver,
        findFirstUser: actionResolvers.FindFirstUserResolver,
        users: actionResolvers.FindManyUserResolver,
        createUser: actionResolvers.CreateUserResolver,
        createManyUser: actionResolvers.CreateManyUserResolver,
        deleteUser: actionResolvers.DeleteUserResolver,
        updateUser: actionResolvers.UpdateUserResolver,
        deleteManyUser: actionResolvers.DeleteManyUserResolver,
        updateManyUser: actionResolvers.UpdateManyUserResolver,
        upsertUser: actionResolvers.UpsertUserResolver,
        aggregateUser: actionResolvers.AggregateUserResolver,
        groupByUser: actionResolvers.GroupByUserResolver
    },
    Inventory: {
        inventory: actionResolvers.FindUniqueInventoryResolver,
        findFirstInventory: actionResolvers.FindFirstInventoryResolver,
        inventories: actionResolvers.FindManyInventoryResolver,
        createInventory: actionResolvers.CreateInventoryResolver,
        createManyInventory: actionResolvers.CreateManyInventoryResolver,
        deleteInventory: actionResolvers.DeleteInventoryResolver,
        updateInventory: actionResolvers.UpdateInventoryResolver,
        deleteManyInventory: actionResolvers.DeleteManyInventoryResolver,
        updateManyInventory: actionResolvers.UpdateManyInventoryResolver,
        upsertInventory: actionResolvers.UpsertInventoryResolver,
        aggregateInventory: actionResolvers.AggregateInventoryResolver,
        groupByInventory: actionResolvers.GroupByInventoryResolver
    },
    Address: {
        address: actionResolvers.FindUniqueAddressResolver,
        findFirstAddress: actionResolvers.FindFirstAddressResolver,
        addresses: actionResolvers.FindManyAddressResolver,
        createAddress: actionResolvers.CreateAddressResolver,
        createManyAddress: actionResolvers.CreateManyAddressResolver,
        deleteAddress: actionResolvers.DeleteAddressResolver,
        updateAddress: actionResolvers.UpdateAddressResolver,
        deleteManyAddress: actionResolvers.DeleteManyAddressResolver,
        updateManyAddress: actionResolvers.UpdateManyAddressResolver,
        upsertAddress: actionResolvers.UpsertAddressResolver,
        aggregateAddress: actionResolvers.AggregateAddressResolver,
        groupByAddress: actionResolvers.GroupByAddressResolver
    },
    NotificationSettings: {
        findUniqueNotificationSettings: actionResolvers.FindUniqueNotificationSettingsResolver,
        findFirstNotificationSettings: actionResolvers.FindFirstNotificationSettingsResolver,
        findManyNotificationSettings: actionResolvers.FindManyNotificationSettingsResolver,
        createNotificationSettings: actionResolvers.CreateNotificationSettingsResolver,
        createManyNotificationSettings: actionResolvers.CreateManyNotificationSettingsResolver,
        deleteNotificationSettings: actionResolvers.DeleteNotificationSettingsResolver,
        updateNotificationSettings: actionResolvers.UpdateNotificationSettingsResolver,
        deleteManyNotificationSettings: actionResolvers.DeleteManyNotificationSettingsResolver,
        updateManyNotificationSettings: actionResolvers.UpdateManyNotificationSettingsResolver,
        upsertNotificationSettings: actionResolvers.UpsertNotificationSettingsResolver,
        aggregateNotificationSettings: actionResolvers.AggregateNotificationSettingsResolver,
        groupByNotificationSettings: actionResolvers.GroupByNotificationSettingsResolver
    },
    Artwork: {
        artwork: actionResolvers.FindUniqueArtworkResolver,
        findFirstArtwork: actionResolvers.FindFirstArtworkResolver,
        artworks: actionResolvers.FindManyArtworkResolver,
        createArtwork: actionResolvers.CreateArtworkResolver,
        createManyArtwork: actionResolvers.CreateManyArtworkResolver,
        deleteArtwork: actionResolvers.DeleteArtworkResolver,
        updateArtwork: actionResolvers.UpdateArtworkResolver,
        deleteManyArtwork: actionResolvers.DeleteManyArtworkResolver,
        updateManyArtwork: actionResolvers.UpdateManyArtworkResolver,
        upsertArtwork: actionResolvers.UpsertArtworkResolver,
        aggregateArtwork: actionResolvers.AggregateArtworkResolver,
        groupByArtwork: actionResolvers.GroupByArtworkResolver
    },
    Color: {
        color: actionResolvers.FindUniqueColorResolver,
        findFirstColor: actionResolvers.FindFirstColorResolver,
        colors: actionResolvers.FindManyColorResolver,
        createColor: actionResolvers.CreateColorResolver,
        createManyColor: actionResolvers.CreateManyColorResolver,
        deleteColor: actionResolvers.DeleteColorResolver,
        updateColor: actionResolvers.UpdateColorResolver,
        deleteManyColor: actionResolvers.DeleteManyColorResolver,
        updateManyColor: actionResolvers.UpdateManyColorResolver,
        upsertColor: actionResolvers.UpsertColorResolver,
        aggregateColor: actionResolvers.AggregateColorResolver,
        groupByColor: actionResolvers.GroupByColorResolver
    },
    Size: {
        size: actionResolvers.FindUniqueSizeResolver,
        findFirstSize: actionResolvers.FindFirstSizeResolver,
        sizes: actionResolvers.FindManySizeResolver,
        createSize: actionResolvers.CreateSizeResolver,
        createManySize: actionResolvers.CreateManySizeResolver,
        deleteSize: actionResolvers.DeleteSizeResolver,
        updateSize: actionResolvers.UpdateSizeResolver,
        deleteManySize: actionResolvers.DeleteManySizeResolver,
        updateManySize: actionResolvers.UpdateManySizeResolver,
        upsertSize: actionResolvers.UpsertSizeResolver,
        aggregateSize: actionResolvers.AggregateSizeResolver,
        groupBySize: actionResolvers.GroupBySizeResolver
    },
    Brand: {
        brand: actionResolvers.FindUniqueBrandResolver,
        findFirstBrand: actionResolvers.FindFirstBrandResolver,
        brands: actionResolvers.FindManyBrandResolver,
        createBrand: actionResolvers.CreateBrandResolver,
        createManyBrand: actionResolvers.CreateManyBrandResolver,
        deleteBrand: actionResolvers.DeleteBrandResolver,
        updateBrand: actionResolvers.UpdateBrandResolver,
        deleteManyBrand: actionResolvers.DeleteManyBrandResolver,
        updateManyBrand: actionResolvers.UpdateManyBrandResolver,
        upsertBrand: actionResolvers.UpsertBrandResolver,
        aggregateBrand: actionResolvers.AggregateBrandResolver,
        groupByBrand: actionResolvers.GroupByBrandResolver
    },
    BrandProduct: {
        brandProduct: actionResolvers.FindUniqueBrandProductResolver,
        findFirstBrandProduct: actionResolvers.FindFirstBrandProductResolver,
        brandProducts: actionResolvers.FindManyBrandProductResolver,
        createBrandProduct: actionResolvers.CreateBrandProductResolver,
        createManyBrandProduct: actionResolvers.CreateManyBrandProductResolver,
        deleteBrandProduct: actionResolvers.DeleteBrandProductResolver,
        updateBrandProduct: actionResolvers.UpdateBrandProductResolver,
        deleteManyBrandProduct: actionResolvers.DeleteManyBrandProductResolver,
        updateManyBrandProduct: actionResolvers.UpdateManyBrandProductResolver,
        upsertBrandProduct: actionResolvers.UpsertBrandProductResolver,
        aggregateBrandProduct: actionResolvers.AggregateBrandProductResolver,
        groupByBrandProduct: actionResolvers.GroupByBrandProductResolver
    },
    Product: {
        product: actionResolvers.FindUniqueProductResolver,
        findFirstProduct: actionResolvers.FindFirstProductResolver,
        products: actionResolvers.FindManyProductResolver,
        createProduct: actionResolvers.CreateProductResolver,
        createManyProduct: actionResolvers.CreateManyProductResolver,
        deleteProduct: actionResolvers.DeleteProductResolver,
        updateProduct: actionResolvers.UpdateProductResolver,
        deleteManyProduct: actionResolvers.DeleteManyProductResolver,
        updateManyProduct: actionResolvers.UpdateManyProductResolver,
        upsertProduct: actionResolvers.UpsertProductResolver,
        aggregateProduct: actionResolvers.AggregateProductResolver,
        groupByProduct: actionResolvers.GroupByProductResolver
    },
    Currency: {
        currency: actionResolvers.FindUniqueCurrencyResolver,
        findFirstCurrency: actionResolvers.FindFirstCurrencyResolver,
        currencies: actionResolvers.FindManyCurrencyResolver,
        createCurrency: actionResolvers.CreateCurrencyResolver,
        createManyCurrency: actionResolvers.CreateManyCurrencyResolver,
        deleteCurrency: actionResolvers.DeleteCurrencyResolver,
        updateCurrency: actionResolvers.UpdateCurrencyResolver,
        deleteManyCurrency: actionResolvers.DeleteManyCurrencyResolver,
        updateManyCurrency: actionResolvers.UpdateManyCurrencyResolver,
        upsertCurrency: actionResolvers.UpsertCurrencyResolver,
        aggregateCurrency: actionResolvers.AggregateCurrencyResolver,
        groupByCurrency: actionResolvers.GroupByCurrencyResolver
    },
    Price: {
        price: actionResolvers.FindUniquePriceResolver,
        findFirstPrice: actionResolvers.FindFirstPriceResolver,
        prices: actionResolvers.FindManyPriceResolver,
        createPrice: actionResolvers.CreatePriceResolver,
        createManyPrice: actionResolvers.CreateManyPriceResolver,
        deletePrice: actionResolvers.DeletePriceResolver,
        updatePrice: actionResolvers.UpdatePriceResolver,
        deleteManyPrice: actionResolvers.DeleteManyPriceResolver,
        updateManyPrice: actionResolvers.UpdateManyPriceResolver,
        upsertPrice: actionResolvers.UpsertPriceResolver,
        aggregatePrice: actionResolvers.AggregatePriceResolver,
        groupByPrice: actionResolvers.GroupByPriceResolver
    },
    ShippingMethod: {
        shippingMethod: actionResolvers.FindUniqueShippingMethodResolver,
        findFirstShippingMethod: actionResolvers.FindFirstShippingMethodResolver,
        shippingMethods: actionResolvers.FindManyShippingMethodResolver,
        createShippingMethod: actionResolvers.CreateShippingMethodResolver,
        createManyShippingMethod: actionResolvers.CreateManyShippingMethodResolver,
        deleteShippingMethod: actionResolvers.DeleteShippingMethodResolver,
        updateShippingMethod: actionResolvers.UpdateShippingMethodResolver,
        deleteManyShippingMethod: actionResolvers.DeleteManyShippingMethodResolver,
        updateManyShippingMethod: actionResolvers.UpdateManyShippingMethodResolver,
        upsertShippingMethod: actionResolvers.UpsertShippingMethodResolver,
        aggregateShippingMethod: actionResolvers.AggregateShippingMethodResolver,
        groupByShippingMethod: actionResolvers.GroupByShippingMethodResolver
    },
    Post: {
        post: actionResolvers.FindUniquePostResolver,
        findFirstPost: actionResolvers.FindFirstPostResolver,
        posts: actionResolvers.FindManyPostResolver,
        createPost: actionResolvers.CreatePostResolver,
        createManyPost: actionResolvers.CreateManyPostResolver,
        deletePost: actionResolvers.DeletePostResolver,
        updatePost: actionResolvers.UpdatePostResolver,
        deleteManyPost: actionResolvers.DeleteManyPostResolver,
        updateManyPost: actionResolvers.UpdateManyPostResolver,
        upsertPost: actionResolvers.UpsertPostResolver,
        aggregatePost: actionResolvers.AggregatePostResolver,
        groupByPost: actionResolvers.GroupByPostResolver
    },
    Comment: {
        comment: actionResolvers.FindUniqueCommentResolver,
        findFirstComment: actionResolvers.FindFirstCommentResolver,
        comments: actionResolvers.FindManyCommentResolver,
        createComment: actionResolvers.CreateCommentResolver,
        createManyComment: actionResolvers.CreateManyCommentResolver,
        deleteComment: actionResolvers.DeleteCommentResolver,
        updateComment: actionResolvers.UpdateCommentResolver,
        deleteManyComment: actionResolvers.DeleteManyCommentResolver,
        updateManyComment: actionResolvers.UpdateManyCommentResolver,
        upsertComment: actionResolvers.UpsertCommentResolver,
        aggregateComment: actionResolvers.AggregateCommentResolver,
        groupByComment: actionResolvers.GroupByCommentResolver
    },
    Reply: {
        reply: actionResolvers.FindUniqueReplyResolver,
        findFirstReply: actionResolvers.FindFirstReplyResolver,
        replies: actionResolvers.FindManyReplyResolver,
        createReply: actionResolvers.CreateReplyResolver,
        createManyReply: actionResolvers.CreateManyReplyResolver,
        deleteReply: actionResolvers.DeleteReplyResolver,
        updateReply: actionResolvers.UpdateReplyResolver,
        deleteManyReply: actionResolvers.DeleteManyReplyResolver,
        updateManyReply: actionResolvers.UpdateManyReplyResolver,
        upsertReply: actionResolvers.UpsertReplyResolver,
        aggregateReply: actionResolvers.AggregateReplyResolver,
        groupByReply: actionResolvers.GroupByReplyResolver
    },
    Reaction: {
        reaction: actionResolvers.FindUniqueReactionResolver,
        findFirstReaction: actionResolvers.FindFirstReactionResolver,
        reactions: actionResolvers.FindManyReactionResolver,
        createReaction: actionResolvers.CreateReactionResolver,
        createManyReaction: actionResolvers.CreateManyReactionResolver,
        deleteReaction: actionResolvers.DeleteReactionResolver,
        updateReaction: actionResolvers.UpdateReactionResolver,
        deleteManyReaction: actionResolvers.DeleteManyReactionResolver,
        updateManyReaction: actionResolvers.UpdateManyReactionResolver,
        upsertReaction: actionResolvers.UpsertReactionResolver,
        aggregateReaction: actionResolvers.AggregateReactionResolver,
        groupByReaction: actionResolvers.GroupByReactionResolver
    },
    OrderLineItem: {
        orderLineItem: actionResolvers.FindUniqueOrderLineItemResolver,
        findFirstOrderLineItem: actionResolvers.FindFirstOrderLineItemResolver,
        orderLineItems: actionResolvers.FindManyOrderLineItemResolver,
        createOrderLineItem: actionResolvers.CreateOrderLineItemResolver,
        createManyOrderLineItem: actionResolvers.CreateManyOrderLineItemResolver,
        deleteOrderLineItem: actionResolvers.DeleteOrderLineItemResolver,
        updateOrderLineItem: actionResolvers.UpdateOrderLineItemResolver,
        deleteManyOrderLineItem: actionResolvers.DeleteManyOrderLineItemResolver,
        updateManyOrderLineItem: actionResolvers.UpdateManyOrderLineItemResolver,
        upsertOrderLineItem: actionResolvers.UpsertOrderLineItemResolver,
        aggregateOrderLineItem: actionResolvers.AggregateOrderLineItemResolver,
        groupByOrderLineItem: actionResolvers.GroupByOrderLineItemResolver
    },
    Order: {
        order: actionResolvers.FindUniqueOrderResolver,
        findFirstOrder: actionResolvers.FindFirstOrderResolver,
        orders: actionResolvers.FindManyOrderResolver,
        createOrder: actionResolvers.CreateOrderResolver,
        createManyOrder: actionResolvers.CreateManyOrderResolver,
        deleteOrder: actionResolvers.DeleteOrderResolver,
        updateOrder: actionResolvers.UpdateOrderResolver,
        deleteManyOrder: actionResolvers.DeleteManyOrderResolver,
        updateManyOrder: actionResolvers.UpdateManyOrderResolver,
        upsertOrder: actionResolvers.UpsertOrderResolver,
        aggregateOrder: actionResolvers.AggregateOrderResolver,
        groupByOrder: actionResolvers.GroupByOrderResolver
    }
};
const crudResolversInfo = {
    User: ["user", "findFirstUser", "users", "createUser", "createManyUser", "deleteUser", "updateUser", "deleteManyUser", "updateManyUser", "upsertUser", "aggregateUser", "groupByUser"],
    Inventory: ["inventory", "findFirstInventory", "inventories", "createInventory", "createManyInventory", "deleteInventory", "updateInventory", "deleteManyInventory", "updateManyInventory", "upsertInventory", "aggregateInventory", "groupByInventory"],
    Address: ["address", "findFirstAddress", "addresses", "createAddress", "createManyAddress", "deleteAddress", "updateAddress", "deleteManyAddress", "updateManyAddress", "upsertAddress", "aggregateAddress", "groupByAddress"],
    NotificationSettings: ["findUniqueNotificationSettings", "findFirstNotificationSettings", "findManyNotificationSettings", "createNotificationSettings", "createManyNotificationSettings", "deleteNotificationSettings", "updateNotificationSettings", "deleteManyNotificationSettings", "updateManyNotificationSettings", "upsertNotificationSettings", "aggregateNotificationSettings", "groupByNotificationSettings"],
    Artwork: ["artwork", "findFirstArtwork", "artworks", "createArtwork", "createManyArtwork", "deleteArtwork", "updateArtwork", "deleteManyArtwork", "updateManyArtwork", "upsertArtwork", "aggregateArtwork", "groupByArtwork"],
    Color: ["color", "findFirstColor", "colors", "createColor", "createManyColor", "deleteColor", "updateColor", "deleteManyColor", "updateManyColor", "upsertColor", "aggregateColor", "groupByColor"],
    Size: ["size", "findFirstSize", "sizes", "createSize", "createManySize", "deleteSize", "updateSize", "deleteManySize", "updateManySize", "upsertSize", "aggregateSize", "groupBySize"],
    Brand: ["brand", "findFirstBrand", "brands", "createBrand", "createManyBrand", "deleteBrand", "updateBrand", "deleteManyBrand", "updateManyBrand", "upsertBrand", "aggregateBrand", "groupByBrand"],
    BrandProduct: ["brandProduct", "findFirstBrandProduct", "brandProducts", "createBrandProduct", "createManyBrandProduct", "deleteBrandProduct", "updateBrandProduct", "deleteManyBrandProduct", "updateManyBrandProduct", "upsertBrandProduct", "aggregateBrandProduct", "groupByBrandProduct"],
    Product: ["product", "findFirstProduct", "products", "createProduct", "createManyProduct", "deleteProduct", "updateProduct", "deleteManyProduct", "updateManyProduct", "upsertProduct", "aggregateProduct", "groupByProduct"],
    Currency: ["currency", "findFirstCurrency", "currencies", "createCurrency", "createManyCurrency", "deleteCurrency", "updateCurrency", "deleteManyCurrency", "updateManyCurrency", "upsertCurrency", "aggregateCurrency", "groupByCurrency"],
    Price: ["price", "findFirstPrice", "prices", "createPrice", "createManyPrice", "deletePrice", "updatePrice", "deleteManyPrice", "updateManyPrice", "upsertPrice", "aggregatePrice", "groupByPrice"],
    ShippingMethod: ["shippingMethod", "findFirstShippingMethod", "shippingMethods", "createShippingMethod", "createManyShippingMethod", "deleteShippingMethod", "updateShippingMethod", "deleteManyShippingMethod", "updateManyShippingMethod", "upsertShippingMethod", "aggregateShippingMethod", "groupByShippingMethod"],
    Post: ["post", "findFirstPost", "posts", "createPost", "createManyPost", "deletePost", "updatePost", "deleteManyPost", "updateManyPost", "upsertPost", "aggregatePost", "groupByPost"],
    Comment: ["comment", "findFirstComment", "comments", "createComment", "createManyComment", "deleteComment", "updateComment", "deleteManyComment", "updateManyComment", "upsertComment", "aggregateComment", "groupByComment"],
    Reply: ["reply", "findFirstReply", "replies", "createReply", "createManyReply", "deleteReply", "updateReply", "deleteManyReply", "updateManyReply", "upsertReply", "aggregateReply", "groupByReply"],
    Reaction: ["reaction", "findFirstReaction", "reactions", "createReaction", "createManyReaction", "deleteReaction", "updateReaction", "deleteManyReaction", "updateManyReaction", "upsertReaction", "aggregateReaction", "groupByReaction"],
    OrderLineItem: ["orderLineItem", "findFirstOrderLineItem", "orderLineItems", "createOrderLineItem", "createManyOrderLineItem", "deleteOrderLineItem", "updateOrderLineItem", "deleteManyOrderLineItem", "updateManyOrderLineItem", "upsertOrderLineItem", "aggregateOrderLineItem", "groupByOrderLineItem"],
    Order: ["order", "findFirstOrder", "orders", "createOrder", "createManyOrder", "deleteOrder", "updateOrder", "deleteManyOrder", "updateManyOrder", "upsertOrder", "aggregateOrder", "groupByOrder"]
};
const argsInfo = {
    FindUniqueUserArgs: ["where"],
    FindFirstUserArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyUserArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateUserArgs: ["data"],
    CreateManyUserArgs: ["data"],
    DeleteUserArgs: ["where"],
    UpdateUserArgs: ["data", "where"],
    DeleteManyUserArgs: ["where"],
    UpdateManyUserArgs: ["data", "where"],
    UpsertUserArgs: ["where", "create", "update"],
    AggregateUserArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByUserArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueInventoryArgs: ["where"],
    FindFirstInventoryArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyInventoryArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateInventoryArgs: ["data"],
    CreateManyInventoryArgs: ["data"],
    DeleteInventoryArgs: ["where"],
    UpdateInventoryArgs: ["data", "where"],
    DeleteManyInventoryArgs: ["where"],
    UpdateManyInventoryArgs: ["data", "where"],
    UpsertInventoryArgs: ["where", "create", "update"],
    AggregateInventoryArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByInventoryArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueAddressArgs: ["where"],
    FindFirstAddressArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyAddressArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateAddressArgs: ["data"],
    CreateManyAddressArgs: ["data"],
    DeleteAddressArgs: ["where"],
    UpdateAddressArgs: ["data", "where"],
    DeleteManyAddressArgs: ["where"],
    UpdateManyAddressArgs: ["data", "where"],
    UpsertAddressArgs: ["where", "create", "update"],
    AggregateAddressArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByAddressArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueNotificationSettingsArgs: ["where"],
    FindFirstNotificationSettingsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyNotificationSettingsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateNotificationSettingsArgs: ["data"],
    CreateManyNotificationSettingsArgs: ["data"],
    DeleteNotificationSettingsArgs: ["where"],
    UpdateNotificationSettingsArgs: ["data", "where"],
    DeleteManyNotificationSettingsArgs: ["where"],
    UpdateManyNotificationSettingsArgs: ["data", "where"],
    UpsertNotificationSettingsArgs: ["where", "create", "update"],
    AggregateNotificationSettingsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByNotificationSettingsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueArtworkArgs: ["where"],
    FindFirstArtworkArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyArtworkArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateArtworkArgs: ["data"],
    CreateManyArtworkArgs: ["data"],
    DeleteArtworkArgs: ["where"],
    UpdateArtworkArgs: ["data", "where"],
    DeleteManyArtworkArgs: ["where"],
    UpdateManyArtworkArgs: ["data", "where"],
    UpsertArtworkArgs: ["where", "create", "update"],
    AggregateArtworkArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByArtworkArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueColorArgs: ["where"],
    FindFirstColorArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyColorArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateColorArgs: ["data"],
    CreateManyColorArgs: ["data"],
    DeleteColorArgs: ["where"],
    UpdateColorArgs: ["data", "where"],
    DeleteManyColorArgs: ["where"],
    UpdateManyColorArgs: ["data", "where"],
    UpsertColorArgs: ["where", "create", "update"],
    AggregateColorArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByColorArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueSizeArgs: ["where"],
    FindFirstSizeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManySizeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateSizeArgs: ["data"],
    CreateManySizeArgs: ["data"],
    DeleteSizeArgs: ["where"],
    UpdateSizeArgs: ["data", "where"],
    DeleteManySizeArgs: ["where"],
    UpdateManySizeArgs: ["data", "where"],
    UpsertSizeArgs: ["where", "create", "update"],
    AggregateSizeArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupBySizeArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueBrandArgs: ["where"],
    FindFirstBrandArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyBrandArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateBrandArgs: ["data"],
    CreateManyBrandArgs: ["data"],
    DeleteBrandArgs: ["where"],
    UpdateBrandArgs: ["data", "where"],
    DeleteManyBrandArgs: ["where"],
    UpdateManyBrandArgs: ["data", "where"],
    UpsertBrandArgs: ["where", "create", "update"],
    AggregateBrandArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByBrandArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueBrandProductArgs: ["where"],
    FindFirstBrandProductArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyBrandProductArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateBrandProductArgs: ["data"],
    CreateManyBrandProductArgs: ["data"],
    DeleteBrandProductArgs: ["where"],
    UpdateBrandProductArgs: ["data", "where"],
    DeleteManyBrandProductArgs: ["where"],
    UpdateManyBrandProductArgs: ["data", "where"],
    UpsertBrandProductArgs: ["where", "create", "update"],
    AggregateBrandProductArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByBrandProductArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueProductArgs: ["where"],
    FindFirstProductArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyProductArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateProductArgs: ["data"],
    CreateManyProductArgs: ["data"],
    DeleteProductArgs: ["where"],
    UpdateProductArgs: ["data", "where"],
    DeleteManyProductArgs: ["where"],
    UpdateManyProductArgs: ["data", "where"],
    UpsertProductArgs: ["where", "create", "update"],
    AggregateProductArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByProductArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueCurrencyArgs: ["where"],
    FindFirstCurrencyArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyCurrencyArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateCurrencyArgs: ["data"],
    CreateManyCurrencyArgs: ["data"],
    DeleteCurrencyArgs: ["where"],
    UpdateCurrencyArgs: ["data", "where"],
    DeleteManyCurrencyArgs: ["where"],
    UpdateManyCurrencyArgs: ["data", "where"],
    UpsertCurrencyArgs: ["where", "create", "update"],
    AggregateCurrencyArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByCurrencyArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniquePriceArgs: ["where"],
    FindFirstPriceArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyPriceArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreatePriceArgs: ["data"],
    CreateManyPriceArgs: ["data"],
    DeletePriceArgs: ["where"],
    UpdatePriceArgs: ["data", "where"],
    DeleteManyPriceArgs: ["where"],
    UpdateManyPriceArgs: ["data", "where"],
    UpsertPriceArgs: ["where", "create", "update"],
    AggregatePriceArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByPriceArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueShippingMethodArgs: ["where"],
    FindFirstShippingMethodArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyShippingMethodArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateShippingMethodArgs: ["data"],
    CreateManyShippingMethodArgs: ["data"],
    DeleteShippingMethodArgs: ["where"],
    UpdateShippingMethodArgs: ["data", "where"],
    DeleteManyShippingMethodArgs: ["where"],
    UpdateManyShippingMethodArgs: ["data", "where"],
    UpsertShippingMethodArgs: ["where", "create", "update"],
    AggregateShippingMethodArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByShippingMethodArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniquePostArgs: ["where"],
    FindFirstPostArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyPostArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreatePostArgs: ["data"],
    CreateManyPostArgs: ["data"],
    DeletePostArgs: ["where"],
    UpdatePostArgs: ["data", "where"],
    DeleteManyPostArgs: ["where"],
    UpdateManyPostArgs: ["data", "where"],
    UpsertPostArgs: ["where", "create", "update"],
    AggregatePostArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByPostArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueCommentArgs: ["where"],
    FindFirstCommentArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyCommentArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateCommentArgs: ["data"],
    CreateManyCommentArgs: ["data"],
    DeleteCommentArgs: ["where"],
    UpdateCommentArgs: ["data", "where"],
    DeleteManyCommentArgs: ["where"],
    UpdateManyCommentArgs: ["data", "where"],
    UpsertCommentArgs: ["where", "create", "update"],
    AggregateCommentArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByCommentArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueReplyArgs: ["where"],
    FindFirstReplyArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyReplyArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateReplyArgs: ["data"],
    CreateManyReplyArgs: ["data"],
    DeleteReplyArgs: ["where"],
    UpdateReplyArgs: ["data", "where"],
    DeleteManyReplyArgs: ["where"],
    UpdateManyReplyArgs: ["data", "where"],
    UpsertReplyArgs: ["where", "create", "update"],
    AggregateReplyArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByReplyArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueReactionArgs: ["where"],
    FindFirstReactionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyReactionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateReactionArgs: ["data"],
    CreateManyReactionArgs: ["data"],
    DeleteReactionArgs: ["where"],
    UpdateReactionArgs: ["data", "where"],
    DeleteManyReactionArgs: ["where"],
    UpdateManyReactionArgs: ["data", "where"],
    UpsertReactionArgs: ["where", "create", "update"],
    AggregateReactionArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByReactionArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueOrderLineItemArgs: ["where"],
    FindFirstOrderLineItemArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyOrderLineItemArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateOrderLineItemArgs: ["data"],
    CreateManyOrderLineItemArgs: ["data"],
    DeleteOrderLineItemArgs: ["where"],
    UpdateOrderLineItemArgs: ["data", "where"],
    DeleteManyOrderLineItemArgs: ["where"],
    UpdateManyOrderLineItemArgs: ["data", "where"],
    UpsertOrderLineItemArgs: ["where", "create", "update"],
    AggregateOrderLineItemArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByOrderLineItemArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    FindUniqueOrderArgs: ["where"],
    FindFirstOrderArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyOrderArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    CreateOrderArgs: ["data"],
    CreateManyOrderArgs: ["data"],
    DeleteOrderArgs: ["where"],
    UpdateOrderArgs: ["data", "where"],
    DeleteManyOrderArgs: ["where"],
    UpdateManyOrderArgs: ["data", "where"],
    UpsertOrderArgs: ["where", "create", "update"],
    AggregateOrderArgs: ["where", "orderBy", "cursor", "take", "skip"],
    GroupByOrderArgs: ["where", "orderBy", "by", "having", "take", "skip"]
};
function applyResolversEnhanceMap(resolversEnhanceMap) {
    for (const resolversEnhanceMapKey of Object.keys(resolversEnhanceMap)) {
        const modelName = resolversEnhanceMapKey;
        const crudTarget = crudResolversMap[modelName].prototype;
        const resolverActionsConfig = resolversEnhanceMap[modelName];
        const actionResolversConfig = actionResolversMap[modelName];
        if (resolverActionsConfig._all) {
            const allActionsDecorators = resolverActionsConfig._all;
            const resolverActionNames = crudResolversInfo[modelName];
            for (const resolverActionName of resolverActionNames) {
                const actionTarget = actionResolversConfig[resolverActionName].prototype;
                tslib.__decorate(allActionsDecorators, crudTarget, resolverActionName, null);
                tslib.__decorate(allActionsDecorators, actionTarget, resolverActionName, null);
            }
        }
        const resolverActionsToApply = Object.keys(resolverActionsConfig).filter(it => it !== "_all");
        for (const resolverActionName of resolverActionsToApply) {
            const decorators = resolverActionsConfig[resolverActionName];
            const actionTarget = actionResolversConfig[resolverActionName].prototype;
            tslib.__decorate(decorators, crudTarget, resolverActionName, null);
            tslib.__decorate(decorators, actionTarget, resolverActionName, null);
        }
    }
}
exports.applyResolversEnhanceMap = applyResolversEnhanceMap;
function applyArgsTypesEnhanceMap(argsTypesEnhanceMap) {
    for (const argsTypesEnhanceMapKey of Object.keys(argsTypesEnhanceMap)) {
        const argsTypeName = argsTypesEnhanceMapKey;
        const typeConfig = argsTypesEnhanceMap[argsTypeName];
        const typeClass = argsTypes[argsTypeName];
        const typeTarget = typeClass.prototype;
        applyTypeClassEnhanceConfig(typeConfig, typeClass, typeTarget, argsInfo[argsTypeName]);
    }
}
exports.applyArgsTypesEnhanceMap = applyArgsTypesEnhanceMap;
const relationResolversMap = {
    User: relationResolvers.UserRelationsResolver,
    Inventory: relationResolvers.InventoryRelationsResolver,
    Address: relationResolvers.AddressRelationsResolver,
    NotificationSettings: relationResolvers.NotificationSettingsRelationsResolver,
    Artwork: relationResolvers.ArtworkRelationsResolver,
    Color: relationResolvers.ColorRelationsResolver,
    Size: relationResolvers.SizeRelationsResolver,
    Brand: relationResolvers.BrandRelationsResolver,
    BrandProduct: relationResolvers.BrandProductRelationsResolver,
    Product: relationResolvers.ProductRelationsResolver,
    Currency: relationResolvers.CurrencyRelationsResolver,
    Price: relationResolvers.PriceRelationsResolver,
    ShippingMethod: relationResolvers.ShippingMethodRelationsResolver,
    Post: relationResolvers.PostRelationsResolver,
    Comment: relationResolvers.CommentRelationsResolver,
    Reply: relationResolvers.ReplyRelationsResolver,
    Reaction: relationResolvers.ReactionRelationsResolver,
    OrderLineItem: relationResolvers.OrderLineItemRelationsResolver,
    Order: relationResolvers.OrderRelationsResolver
};
const relationResolversInfo = {
    User: ["Addresses", "NotificationSettings", "Following", "Followers", "Order", "LikedProducts", "Inventory", "Posts", "Comments", "Replies", "Reactions"],
    Inventory: ["Products", "Artwork", "User"],
    Address: ["User", "Orders"],
    NotificationSettings: ["User"],
    Artwork: ["Products", "Inventory", "OrderLineItems"],
    Color: ["Products", "OrderLineItems"],
    Size: ["Products", "OrderLineItems"],
    Brand: ["BrandProducts"],
    BrandProduct: ["brand", "Products"],
    Product: ["price", "BaseProduct", "Artwork", "Colors", "Sizes", "OrderLineItems", "LikedBy", "Inventory"],
    Currency: ["prices"],
    Price: ["currency", "ShippingMethods", "Products", "OrderLineItems"],
    ShippingMethod: ["price", "Orders"],
    Post: ["Author", "Comments", "Reactions"],
    Comment: ["Post", "Author", "Replies", "Reactions"],
    Reply: ["Comment", "Author", "Reactions"],
    Reaction: ["Post", "Comment", "Reply", "Author"],
    OrderLineItem: ["lineItemPrice", "SelectedProduct", "SelectedColor", "SelectedArtwork", "SelectedSize", "Order"],
    Order: ["SelectedShippingAddress", "SelectedShippingMethod", "User", "Items"]
};
function applyRelationResolversEnhanceMap(relationResolversEnhanceMap) {
    for (const relationResolversEnhanceMapKey of Object.keys(relationResolversEnhanceMap)) {
        const modelName = relationResolversEnhanceMapKey;
        const relationResolverTarget = relationResolversMap[modelName].prototype;
        const relationResolverActionsConfig = relationResolversEnhanceMap[modelName];
        if (relationResolverActionsConfig._all) {
            const allActionsDecorators = relationResolverActionsConfig._all;
            const relationResolverActionNames = relationResolversInfo[modelName];
            for (const relationResolverActionName of relationResolverActionNames) {
                tslib.__decorate(allActionsDecorators, relationResolverTarget, relationResolverActionName, null);
            }
        }
        const relationResolverActionsToApply = Object.keys(relationResolverActionsConfig).filter(it => it !== "_all");
        for (const relationResolverActionName of relationResolverActionsToApply) {
            const decorators = relationResolverActionsConfig[relationResolverActionName];
            tslib.__decorate(decorators, relationResolverTarget, relationResolverActionName, null);
        }
    }
}
exports.applyRelationResolversEnhanceMap = applyRelationResolversEnhanceMap;
function applyTypeClassEnhanceConfig(enhanceConfig, typeClass, typePrototype, typeFieldNames) {
    if (enhanceConfig.class) {
        tslib.__decorate(enhanceConfig.class, typeClass);
    }
    if (enhanceConfig.fields) {
        if (enhanceConfig.fields._all) {
            const allFieldsDecorators = enhanceConfig.fields._all;
            for (const typeFieldName of typeFieldNames) {
                tslib.__decorate(allFieldsDecorators, typePrototype, typeFieldName, void 0);
            }
        }
        const configFieldsToApply = Object.keys(enhanceConfig.fields).filter(it => it !== "_all");
        for (const typeFieldName of configFieldsToApply) {
            const fieldDecorators = enhanceConfig.fields[typeFieldName];
            tslib.__decorate(fieldDecorators, typePrototype, typeFieldName, void 0);
        }
    }
}
const modelsInfo = {
    User: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "followingIds", "followerIds", "productIds", "createdAt", "updatedAt"],
    Inventory: ["id", "userId", "createdAt", "updatedAt"],
    Address: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "userId", "createdAt", "updatedAt"],
    NotificationSettings: ["id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "userId", "createdAt", "updatedAt"],
    Artwork: ["id", "title", "description", "caption", "url", "productIds", "inventoryId", "createdAt", "updatedAt"],
    Color: ["id", "name", "hex", "productIds", "createdAt", "updatedAt"],
    Size: ["id", "value", "region", "productIds", "createdAt", "updatedAt"],
    Brand: ["id", "name", "description", "tagline", "status", "createdAt", "updatedAt"],
    BrandProduct: ["id", "name", "releaseYear", "description", "type", "category", "brandId", "status", "createdAt", "updatedAt"],
    Product: ["id", "description", "priceId", "availableQuantity", "photo", "gallery", "baseProductId", "artworkIds", "colorIds", "sizeIds", "likedByIds", "inventoryId", "createdAt", "updatedAt"],
    Currency: ["id", "name", "symbol", "code", "createdAt", "updatedAt"],
    Price: ["id", "priceInLowestDenomination", "displayPrice", "currencyId", "createdAt", "updatedAt"],
    ShippingMethod: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "priceId", "createdAt", "updatedAt"],
    Post: ["id", "type", "caption", "mediaUrl", "isCommentsEnabled", "authorId", "createdAt", "updatedAt"],
    Comment: ["id", "text", "postId", "authorId", "createdAt", "updatedAt"],
    Reply: ["id", "text", "commentId", "authorId", "createdAt", "updatedAt"],
    Reaction: ["id", "type", "postId", "commentId", "replyId", "authorId", "createdAt", "updatedAt"],
    OrderLineItem: ["id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt"],
    Order: ["id", "status", "selectedShippingAddressId", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt"]
};
function applyModelsEnhanceMap(modelsEnhanceMap) {
    for (const modelsEnhanceMapKey of Object.keys(modelsEnhanceMap)) {
        const modelName = modelsEnhanceMapKey;
        const modelConfig = modelsEnhanceMap[modelName];
        const modelClass = models[modelName];
        const modelTarget = modelClass.prototype;
        applyTypeClassEnhanceConfig(modelConfig, modelClass, modelTarget, modelsInfo[modelName]);
    }
}
exports.applyModelsEnhanceMap = applyModelsEnhanceMap;
const outputsInfo = {
    AggregateUser: ["_count", "_min", "_max"],
    UserGroupBy: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "followingIds", "followerIds", "productIds", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateInventory: ["_count", "_min", "_max"],
    InventoryGroupBy: ["id", "userId", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateAddress: ["_count", "_min", "_max"],
    AddressGroupBy: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "userId", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateNotificationSettings: ["_count", "_min", "_max"],
    NotificationSettingsGroupBy: ["id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "userId", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateArtwork: ["_count", "_min", "_max"],
    ArtworkGroupBy: ["id", "title", "description", "caption", "url", "productIds", "inventoryId", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateColor: ["_count", "_min", "_max"],
    ColorGroupBy: ["id", "name", "hex", "productIds", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateSize: ["_count", "_min", "_max"],
    SizeGroupBy: ["id", "value", "region", "productIds", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateBrand: ["_count", "_min", "_max"],
    BrandGroupBy: ["id", "name", "description", "tagline", "status", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateBrandProduct: ["_count", "_min", "_max"],
    BrandProductGroupBy: ["id", "name", "releaseYear", "description", "type", "category", "brandId", "status", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateProduct: ["_count", "_avg", "_sum", "_min", "_max"],
    ProductGroupBy: ["id", "description", "priceId", "availableQuantity", "photo", "gallery", "baseProductId", "artworkIds", "colorIds", "sizeIds", "likedByIds", "inventoryId", "createdAt", "updatedAt", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateCurrency: ["_count", "_min", "_max"],
    CurrencyGroupBy: ["id", "name", "symbol", "code", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregatePrice: ["_count", "_avg", "_sum", "_min", "_max"],
    PriceGroupBy: ["id", "priceInLowestDenomination", "displayPrice", "currencyId", "createdAt", "updatedAt", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateShippingMethod: ["_count", "_avg", "_sum", "_min", "_max"],
    ShippingMethodGroupBy: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "priceId", "createdAt", "updatedAt", "_count", "_avg", "_sum", "_min", "_max"],
    AggregatePost: ["_count", "_min", "_max"],
    PostGroupBy: ["id", "type", "caption", "mediaUrl", "isCommentsEnabled", "authorId", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateComment: ["_count", "_min", "_max"],
    CommentGroupBy: ["id", "text", "postId", "authorId", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateReply: ["_count", "_min", "_max"],
    ReplyGroupBy: ["id", "text", "commentId", "authorId", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateReaction: ["_count", "_min", "_max"],
    ReactionGroupBy: ["id", "type", "postId", "commentId", "replyId", "authorId", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateOrderLineItem: ["_count", "_min", "_max"],
    OrderLineItemGroupBy: ["id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AggregateOrder: ["_count", "_min", "_max"],
    OrderGroupBy: ["id", "status", "selectedShippingAddressId", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt", "_count", "_min", "_max"],
    AffectedRowsOutput: ["count"],
    UserCount: ["Addresses", "Following", "Followers", "LikedProducts", "Posts", "Comments", "Replies", "Reactions"],
    UserCountAggregate: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "followingIds", "followerIds", "productIds", "createdAt", "updatedAt", "_all"],
    UserMinAggregate: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "createdAt", "updatedAt"],
    UserMaxAggregate: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "createdAt", "updatedAt"],
    InventoryCount: ["Products", "Artwork"],
    InventoryCountAggregate: ["id", "userId", "createdAt", "updatedAt", "_all"],
    InventoryMinAggregate: ["id", "userId", "createdAt", "updatedAt"],
    InventoryMaxAggregate: ["id", "userId", "createdAt", "updatedAt"],
    AddressCount: ["Orders"],
    AddressCountAggregate: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "userId", "createdAt", "updatedAt", "_all"],
    AddressMinAggregate: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "userId", "createdAt", "updatedAt"],
    AddressMaxAggregate: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "userId", "createdAt", "updatedAt"],
    NotificationSettingsCountAggregate: ["id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "userId", "createdAt", "updatedAt", "_all"],
    NotificationSettingsMinAggregate: ["id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "userId", "createdAt", "updatedAt"],
    NotificationSettingsMaxAggregate: ["id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "userId", "createdAt", "updatedAt"],
    ArtworkCount: ["Products", "OrderLineItems"],
    ArtworkCountAggregate: ["id", "title", "description", "caption", "url", "productIds", "inventoryId", "createdAt", "updatedAt", "_all"],
    ArtworkMinAggregate: ["id", "title", "description", "caption", "url", "inventoryId", "createdAt", "updatedAt"],
    ArtworkMaxAggregate: ["id", "title", "description", "caption", "url", "inventoryId", "createdAt", "updatedAt"],
    ColorCount: ["Products", "OrderLineItems"],
    ColorCountAggregate: ["id", "name", "hex", "productIds", "createdAt", "updatedAt", "_all"],
    ColorMinAggregate: ["id", "name", "hex", "createdAt", "updatedAt"],
    ColorMaxAggregate: ["id", "name", "hex", "createdAt", "updatedAt"],
    SizeCount: ["Products", "OrderLineItems"],
    SizeCountAggregate: ["id", "value", "region", "productIds", "createdAt", "updatedAt", "_all"],
    SizeMinAggregate: ["id", "value", "region", "createdAt", "updatedAt"],
    SizeMaxAggregate: ["id", "value", "region", "createdAt", "updatedAt"],
    BrandCount: ["BrandProducts"],
    BrandCountAggregate: ["id", "name", "description", "tagline", "status", "createdAt", "updatedAt", "_all"],
    BrandMinAggregate: ["id", "name", "description", "tagline", "status", "createdAt", "updatedAt"],
    BrandMaxAggregate: ["id", "name", "description", "tagline", "status", "createdAt", "updatedAt"],
    BrandProductCount: ["Products"],
    BrandProductCountAggregate: ["id", "name", "releaseYear", "description", "type", "category", "brandId", "status", "createdAt", "updatedAt", "_all"],
    BrandProductMinAggregate: ["id", "name", "releaseYear", "description", "type", "category", "brandId", "status", "createdAt", "updatedAt"],
    BrandProductMaxAggregate: ["id", "name", "releaseYear", "description", "type", "category", "brandId", "status", "createdAt", "updatedAt"],
    ProductCount: ["Artwork", "Colors", "Sizes", "OrderLineItems", "LikedBy"],
    ProductCountAggregate: ["id", "description", "priceId", "availableQuantity", "photo", "gallery", "baseProductId", "artworkIds", "colorIds", "sizeIds", "likedByIds", "inventoryId", "createdAt", "updatedAt", "_all"],
    ProductAvgAggregate: ["availableQuantity"],
    ProductSumAggregate: ["availableQuantity"],
    ProductMinAggregate: ["id", "description", "priceId", "availableQuantity", "photo", "baseProductId", "inventoryId", "createdAt", "updatedAt"],
    ProductMaxAggregate: ["id", "description", "priceId", "availableQuantity", "photo", "baseProductId", "inventoryId", "createdAt", "updatedAt"],
    CurrencyCount: ["prices"],
    CurrencyCountAggregate: ["id", "name", "symbol", "code", "createdAt", "updatedAt", "_all"],
    CurrencyMinAggregate: ["id", "name", "symbol", "code", "createdAt", "updatedAt"],
    CurrencyMaxAggregate: ["id", "name", "symbol", "code", "createdAt", "updatedAt"],
    PriceCount: ["ShippingMethods", "Products", "OrderLineItems"],
    PriceCountAggregate: ["id", "priceInLowestDenomination", "displayPrice", "currencyId", "createdAt", "updatedAt", "_all"],
    PriceAvgAggregate: ["priceInLowestDenomination"],
    PriceSumAggregate: ["priceInLowestDenomination"],
    PriceMinAggregate: ["id", "priceInLowestDenomination", "displayPrice", "currencyId", "createdAt", "updatedAt"],
    PriceMaxAggregate: ["id", "priceInLowestDenomination", "displayPrice", "currencyId", "createdAt", "updatedAt"],
    ShippingMethodCount: ["Orders"],
    ShippingMethodCountAggregate: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "priceId", "createdAt", "updatedAt", "_all"],
    ShippingMethodAvgAggregate: ["arrivalTimeInBusinessDays"],
    ShippingMethodSumAggregate: ["arrivalTimeInBusinessDays"],
    ShippingMethodMinAggregate: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "priceId", "createdAt", "updatedAt"],
    ShippingMethodMaxAggregate: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "priceId", "createdAt", "updatedAt"],
    PostCount: ["Comments", "Reactions"],
    PostCountAggregate: ["id", "type", "caption", "mediaUrl", "isCommentsEnabled", "authorId", "createdAt", "updatedAt", "_all"],
    PostMinAggregate: ["id", "type", "caption", "isCommentsEnabled", "authorId", "createdAt", "updatedAt"],
    PostMaxAggregate: ["id", "type", "caption", "isCommentsEnabled", "authorId", "createdAt", "updatedAt"],
    CommentCount: ["Replies", "Reactions"],
    CommentCountAggregate: ["id", "text", "postId", "authorId", "createdAt", "updatedAt", "_all"],
    CommentMinAggregate: ["id", "text", "postId", "authorId", "createdAt", "updatedAt"],
    CommentMaxAggregate: ["id", "text", "postId", "authorId", "createdAt", "updatedAt"],
    ReplyCount: ["Reactions"],
    ReplyCountAggregate: ["id", "text", "commentId", "authorId", "createdAt", "updatedAt", "_all"],
    ReplyMinAggregate: ["id", "text", "commentId", "authorId", "createdAt", "updatedAt"],
    ReplyMaxAggregate: ["id", "text", "commentId", "authorId", "createdAt", "updatedAt"],
    ReactionCountAggregate: ["id", "type", "postId", "commentId", "replyId", "authorId", "createdAt", "updatedAt", "_all"],
    ReactionMinAggregate: ["id", "type", "postId", "commentId", "replyId", "authorId", "createdAt", "updatedAt"],
    ReactionMaxAggregate: ["id", "type", "postId", "commentId", "replyId", "authorId", "createdAt", "updatedAt"],
    OrderLineItemCountAggregate: ["id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt", "_all"],
    OrderLineItemMinAggregate: ["id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt"],
    OrderLineItemMaxAggregate: ["id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt"],
    OrderCount: ["Items"],
    OrderCountAggregate: ["id", "status", "selectedShippingAddressId", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt", "_all"],
    OrderMinAggregate: ["id", "status", "selectedShippingAddressId", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt"],
    OrderMaxAggregate: ["id", "status", "selectedShippingAddressId", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt"]
};
function applyOutputTypesEnhanceMap(outputTypesEnhanceMap) {
    for (const outputTypeEnhanceMapKey of Object.keys(outputTypesEnhanceMap)) {
        const outputTypeName = outputTypeEnhanceMapKey;
        const typeConfig = outputTypesEnhanceMap[outputTypeName];
        const typeClass = outputTypes[outputTypeName];
        const typeTarget = typeClass.prototype;
        applyTypeClassEnhanceConfig(typeConfig, typeClass, typeTarget, outputsInfo[outputTypeName]);
    }
}
exports.applyOutputTypesEnhanceMap = applyOutputTypesEnhanceMap;
const inputsInfo = {
    UserWhereInput: ["AND", "OR", "NOT", "uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserOrderByWithRelationInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserWhereUniqueInput: ["uid", "id", "username", "email"],
    UserOrderByWithAggregationInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "followingIds", "followerIds", "productIds", "createdAt", "updatedAt", "_count", "_max", "_min"],
    UserScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "followingIds", "followerIds", "productIds", "createdAt", "updatedAt"],
    InventoryWhereInput: ["AND", "OR", "NOT", "id", "Products", "Artwork", "User", "userId", "createdAt", "updatedAt"],
    InventoryOrderByWithRelationInput: ["id", "Products", "Artwork", "User", "userId", "createdAt", "updatedAt"],
    InventoryWhereUniqueInput: ["id", "userId"],
    InventoryOrderByWithAggregationInput: ["id", "userId", "createdAt", "updatedAt", "_count", "_max", "_min"],
    InventoryScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "userId", "createdAt", "updatedAt"],
    AddressWhereInput: ["AND", "OR", "NOT", "id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "User", "userId", "Orders", "createdAt", "updatedAt"],
    AddressOrderByWithRelationInput: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "User", "userId", "Orders", "createdAt", "updatedAt"],
    AddressWhereUniqueInput: ["id"],
    AddressOrderByWithAggregationInput: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "userId", "createdAt", "updatedAt", "_count", "_max", "_min"],
    AddressScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "userId", "createdAt", "updatedAt"],
    NotificationSettingsWhereInput: ["AND", "OR", "NOT", "id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "User", "userId", "createdAt", "updatedAt"],
    NotificationSettingsOrderByWithRelationInput: ["id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "User", "userId", "createdAt", "updatedAt"],
    NotificationSettingsWhereUniqueInput: ["id", "userId"],
    NotificationSettingsOrderByWithAggregationInput: ["id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "userId", "createdAt", "updatedAt", "_count", "_max", "_min"],
    NotificationSettingsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "userId", "createdAt", "updatedAt"],
    ArtworkWhereInput: ["AND", "OR", "NOT", "id", "title", "description", "caption", "url", "Products", "productIds", "Inventory", "inventoryId", "OrderLineItems", "createdAt", "updatedAt"],
    ArtworkOrderByWithRelationInput: ["id", "title", "description", "caption", "url", "Products", "productIds", "Inventory", "inventoryId", "OrderLineItems", "createdAt", "updatedAt"],
    ArtworkWhereUniqueInput: ["id"],
    ArtworkOrderByWithAggregationInput: ["id", "title", "description", "caption", "url", "productIds", "inventoryId", "createdAt", "updatedAt", "_count", "_max", "_min"],
    ArtworkScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "title", "description", "caption", "url", "productIds", "inventoryId", "createdAt", "updatedAt"],
    ColorWhereInput: ["AND", "OR", "NOT", "id", "name", "hex", "Products", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    ColorOrderByWithRelationInput: ["id", "name", "hex", "Products", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    ColorWhereUniqueInput: ["id"],
    ColorOrderByWithAggregationInput: ["id", "name", "hex", "productIds", "createdAt", "updatedAt", "_count", "_max", "_min"],
    ColorScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "hex", "productIds", "createdAt", "updatedAt"],
    SizeWhereInput: ["AND", "OR", "NOT", "id", "value", "region", "Products", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    SizeOrderByWithRelationInput: ["id", "value", "region", "Products", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    SizeWhereUniqueInput: ["id"],
    SizeOrderByWithAggregationInput: ["id", "value", "region", "productIds", "createdAt", "updatedAt", "_count", "_max", "_min"],
    SizeScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "value", "region", "productIds", "createdAt", "updatedAt"],
    BrandWhereInput: ["AND", "OR", "NOT", "id", "name", "description", "tagline", "BrandProducts", "status", "createdAt", "updatedAt"],
    BrandOrderByWithRelationInput: ["id", "name", "description", "tagline", "BrandProducts", "status", "createdAt", "updatedAt"],
    BrandWhereUniqueInput: ["id"],
    BrandOrderByWithAggregationInput: ["id", "name", "description", "tagline", "status", "createdAt", "updatedAt", "_count", "_max", "_min"],
    BrandScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "description", "tagline", "status", "createdAt", "updatedAt"],
    BrandProductWhereInput: ["AND", "OR", "NOT", "id", "name", "releaseYear", "description", "type", "category", "brand", "brandId", "status", "Products", "createdAt", "updatedAt"],
    BrandProductOrderByWithRelationInput: ["id", "name", "releaseYear", "description", "type", "category", "brand", "brandId", "status", "Products", "createdAt", "updatedAt"],
    BrandProductWhereUniqueInput: ["id"],
    BrandProductOrderByWithAggregationInput: ["id", "name", "releaseYear", "description", "type", "category", "brandId", "status", "createdAt", "updatedAt", "_count", "_max", "_min"],
    BrandProductScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "releaseYear", "description", "type", "category", "brandId", "status", "createdAt", "updatedAt"],
    ProductWhereInput: ["AND", "OR", "NOT", "id", "description", "price", "priceId", "availableQuantity", "photo", "gallery", "BaseProduct", "baseProductId", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "inventoryId", "createdAt", "updatedAt"],
    ProductOrderByWithRelationInput: ["id", "description", "price", "priceId", "availableQuantity", "photo", "gallery", "BaseProduct", "baseProductId", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "inventoryId", "createdAt", "updatedAt"],
    ProductWhereUniqueInput: ["id"],
    ProductOrderByWithAggregationInput: ["id", "description", "priceId", "availableQuantity", "photo", "gallery", "baseProductId", "artworkIds", "colorIds", "sizeIds", "likedByIds", "inventoryId", "createdAt", "updatedAt", "_count", "_avg", "_max", "_min", "_sum"],
    ProductScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "description", "priceId", "availableQuantity", "photo", "gallery", "baseProductId", "artworkIds", "colorIds", "sizeIds", "likedByIds", "inventoryId", "createdAt", "updatedAt"],
    CurrencyWhereInput: ["AND", "OR", "NOT", "id", "name", "symbol", "code", "prices", "createdAt", "updatedAt"],
    CurrencyOrderByWithRelationInput: ["id", "name", "symbol", "code", "prices", "createdAt", "updatedAt"],
    CurrencyWhereUniqueInput: ["id"],
    CurrencyOrderByWithAggregationInput: ["id", "name", "symbol", "code", "createdAt", "updatedAt", "_count", "_max", "_min"],
    CurrencyScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "symbol", "code", "createdAt", "updatedAt"],
    PriceWhereInput: ["AND", "OR", "NOT", "id", "priceInLowestDenomination", "displayPrice", "currency", "currencyId", "ShippingMethods", "Products", "OrderLineItems", "createdAt", "updatedAt"],
    PriceOrderByWithRelationInput: ["id", "priceInLowestDenomination", "displayPrice", "currency", "currencyId", "ShippingMethods", "Products", "OrderLineItems", "createdAt", "updatedAt"],
    PriceWhereUniqueInput: ["id"],
    PriceOrderByWithAggregationInput: ["id", "priceInLowestDenomination", "displayPrice", "currencyId", "createdAt", "updatedAt", "_count", "_avg", "_max", "_min", "_sum"],
    PriceScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "priceInLowestDenomination", "displayPrice", "currencyId", "createdAt", "updatedAt"],
    ShippingMethodWhereInput: ["AND", "OR", "NOT", "id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "price", "priceId", "Orders", "createdAt", "updatedAt"],
    ShippingMethodOrderByWithRelationInput: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "price", "priceId", "Orders", "createdAt", "updatedAt"],
    ShippingMethodWhereUniqueInput: ["id"],
    ShippingMethodOrderByWithAggregationInput: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "priceId", "createdAt", "updatedAt", "_count", "_avg", "_max", "_min", "_sum"],
    ShippingMethodScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "priceId", "createdAt", "updatedAt"],
    PostWhereInput: ["AND", "OR", "NOT", "id", "type", "caption", "mediaUrl", "isCommentsEnabled", "Author", "authorId", "Comments", "Reactions", "createdAt", "updatedAt"],
    PostOrderByWithRelationInput: ["id", "type", "caption", "mediaUrl", "isCommentsEnabled", "Author", "authorId", "Comments", "Reactions", "createdAt", "updatedAt"],
    PostWhereUniqueInput: ["id"],
    PostOrderByWithAggregationInput: ["id", "type", "caption", "mediaUrl", "isCommentsEnabled", "authorId", "createdAt", "updatedAt", "_count", "_max", "_min"],
    PostScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "type", "caption", "mediaUrl", "isCommentsEnabled", "authorId", "createdAt", "updatedAt"],
    CommentWhereInput: ["AND", "OR", "NOT", "id", "text", "Post", "postId", "Author", "authorId", "Replies", "Reactions", "createdAt", "updatedAt"],
    CommentOrderByWithRelationInput: ["id", "text", "Post", "postId", "Author", "authorId", "Replies", "Reactions", "createdAt", "updatedAt"],
    CommentWhereUniqueInput: ["id"],
    CommentOrderByWithAggregationInput: ["id", "text", "postId", "authorId", "createdAt", "updatedAt", "_count", "_max", "_min"],
    CommentScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "text", "postId", "authorId", "createdAt", "updatedAt"],
    ReplyWhereInput: ["AND", "OR", "NOT", "id", "text", "Comment", "commentId", "Author", "authorId", "Reactions", "createdAt", "updatedAt"],
    ReplyOrderByWithRelationInput: ["id", "text", "Comment", "commentId", "Author", "authorId", "Reactions", "createdAt", "updatedAt"],
    ReplyWhereUniqueInput: ["id"],
    ReplyOrderByWithAggregationInput: ["id", "text", "commentId", "authorId", "createdAt", "updatedAt", "_count", "_max", "_min"],
    ReplyScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "text", "commentId", "authorId", "createdAt", "updatedAt"],
    ReactionWhereInput: ["AND", "OR", "NOT", "id", "type", "Post", "postId", "Comment", "commentId", "Reply", "replyId", "Author", "authorId", "createdAt", "updatedAt"],
    ReactionOrderByWithRelationInput: ["id", "type", "Post", "postId", "Comment", "commentId", "Reply", "replyId", "Author", "authorId", "createdAt", "updatedAt"],
    ReactionWhereUniqueInput: ["id"],
    ReactionOrderByWithAggregationInput: ["id", "type", "postId", "commentId", "replyId", "authorId", "createdAt", "updatedAt", "_count", "_max", "_min"],
    ReactionScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "type", "postId", "commentId", "replyId", "authorId", "createdAt", "updatedAt"],
    OrderLineItemWhereInput: ["AND", "OR", "NOT", "id", "lineItemPrice", "priceId", "SelectedProduct", "selectedProductId", "SelectedColor", "selectedColorId", "SelectedArtwork", "selectedArtworkId", "SelectedSize", "selectedSizeId", "Order", "orderId", "createdAt", "updatedAt"],
    OrderLineItemOrderByWithRelationInput: ["id", "lineItemPrice", "priceId", "SelectedProduct", "selectedProductId", "SelectedColor", "selectedColorId", "SelectedArtwork", "selectedArtworkId", "SelectedSize", "selectedSizeId", "Order", "orderId", "createdAt", "updatedAt"],
    OrderLineItemWhereUniqueInput: ["id"],
    OrderLineItemOrderByWithAggregationInput: ["id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt", "_count", "_max", "_min"],
    OrderLineItemScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt"],
    OrderWhereInput: ["AND", "OR", "NOT", "id", "status", "SelectedShippingAddress", "selectedShippingAddressId", "SelectedShippingMethod", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "User", "userId", "Items", "createdAt", "updatedAt"],
    OrderOrderByWithRelationInput: ["id", "status", "SelectedShippingAddress", "selectedShippingAddressId", "SelectedShippingMethod", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "User", "userId", "Items", "createdAt", "updatedAt"],
    OrderWhereUniqueInput: ["id", "userId"],
    OrderOrderByWithAggregationInput: ["id", "status", "selectedShippingAddressId", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt", "_count", "_max", "_min"],
    OrderScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "status", "selectedShippingAddressId", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt"],
    UserCreateInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserUpdateInput: ["uid", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserCreateManyInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "followingIds", "followerIds", "productIds", "createdAt", "updatedAt"],
    UserUpdateManyMutationInput: ["uid", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "followingIds", "followerIds", "productIds", "createdAt", "updatedAt"],
    InventoryCreateInput: ["id", "Products", "Artwork", "User", "createdAt", "updatedAt"],
    InventoryUpdateInput: ["Products", "Artwork", "User", "createdAt", "updatedAt"],
    InventoryCreateManyInput: ["id", "userId", "createdAt", "updatedAt"],
    InventoryUpdateManyMutationInput: ["createdAt", "updatedAt"],
    AddressCreateInput: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "User", "Orders", "createdAt", "updatedAt"],
    AddressUpdateInput: ["type", "line1", "line2", "city", "district", "country", "code", "isDefault", "User", "Orders", "createdAt", "updatedAt"],
    AddressCreateManyInput: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "userId", "createdAt", "updatedAt"],
    AddressUpdateManyMutationInput: ["type", "line1", "line2", "city", "district", "country", "code", "isDefault", "createdAt", "updatedAt"],
    NotificationSettingsCreateInput: ["id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "User", "createdAt", "updatedAt"],
    NotificationSettingsUpdateInput: ["newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "User", "createdAt", "updatedAt"],
    NotificationSettingsCreateManyInput: ["id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "userId", "createdAt", "updatedAt"],
    NotificationSettingsUpdateManyMutationInput: ["newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "createdAt", "updatedAt"],
    ArtworkCreateInput: ["id", "title", "description", "caption", "url", "Products", "productIds", "Inventory", "OrderLineItems", "createdAt", "updatedAt"],
    ArtworkUpdateInput: ["title", "description", "caption", "url", "Products", "productIds", "Inventory", "OrderLineItems", "createdAt", "updatedAt"],
    ArtworkCreateManyInput: ["id", "title", "description", "caption", "url", "productIds", "inventoryId", "createdAt", "updatedAt"],
    ArtworkUpdateManyMutationInput: ["title", "description", "caption", "url", "productIds", "createdAt", "updatedAt"],
    ColorCreateInput: ["id", "name", "hex", "Products", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    ColorUpdateInput: ["name", "hex", "Products", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    ColorCreateManyInput: ["id", "name", "hex", "productIds", "createdAt", "updatedAt"],
    ColorUpdateManyMutationInput: ["name", "hex", "productIds", "createdAt", "updatedAt"],
    SizeCreateInput: ["id", "value", "region", "Products", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    SizeUpdateInput: ["value", "region", "Products", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    SizeCreateManyInput: ["id", "value", "region", "productIds", "createdAt", "updatedAt"],
    SizeUpdateManyMutationInput: ["value", "region", "productIds", "createdAt", "updatedAt"],
    BrandCreateInput: ["id", "name", "description", "tagline", "BrandProducts", "status", "createdAt", "updatedAt"],
    BrandUpdateInput: ["name", "description", "tagline", "BrandProducts", "status", "createdAt", "updatedAt"],
    BrandCreateManyInput: ["id", "name", "description", "tagline", "status", "createdAt", "updatedAt"],
    BrandUpdateManyMutationInput: ["name", "description", "tagline", "status", "createdAt", "updatedAt"],
    BrandProductCreateInput: ["id", "name", "releaseYear", "description", "type", "category", "brand", "status", "Products", "createdAt", "updatedAt"],
    BrandProductUpdateInput: ["name", "releaseYear", "description", "type", "category", "brand", "status", "Products", "createdAt", "updatedAt"],
    BrandProductCreateManyInput: ["id", "name", "releaseYear", "description", "type", "category", "brandId", "status", "createdAt", "updatedAt"],
    BrandProductUpdateManyMutationInput: ["name", "releaseYear", "description", "type", "category", "status", "createdAt", "updatedAt"],
    ProductCreateInput: ["id", "description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    ProductUpdateInput: ["description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    ProductCreateManyInput: ["id", "description", "priceId", "availableQuantity", "photo", "gallery", "baseProductId", "artworkIds", "colorIds", "sizeIds", "likedByIds", "inventoryId", "createdAt", "updatedAt"],
    ProductUpdateManyMutationInput: ["description", "availableQuantity", "photo", "gallery", "artworkIds", "colorIds", "sizeIds", "likedByIds", "createdAt", "updatedAt"],
    CurrencyCreateInput: ["id", "name", "symbol", "code", "prices", "createdAt", "updatedAt"],
    CurrencyUpdateInput: ["name", "symbol", "code", "prices", "createdAt", "updatedAt"],
    CurrencyCreateManyInput: ["id", "name", "symbol", "code", "createdAt", "updatedAt"],
    CurrencyUpdateManyMutationInput: ["name", "symbol", "code", "createdAt", "updatedAt"],
    PriceCreateInput: ["id", "priceInLowestDenomination", "displayPrice", "currency", "ShippingMethods", "Products", "OrderLineItems", "createdAt", "updatedAt"],
    PriceUpdateInput: ["priceInLowestDenomination", "displayPrice", "currency", "ShippingMethods", "Products", "OrderLineItems", "createdAt", "updatedAt"],
    PriceCreateManyInput: ["id", "priceInLowestDenomination", "displayPrice", "currencyId", "createdAt", "updatedAt"],
    PriceUpdateManyMutationInput: ["priceInLowestDenomination", "displayPrice", "createdAt", "updatedAt"],
    ShippingMethodCreateInput: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "price", "Orders", "createdAt", "updatedAt"],
    ShippingMethodUpdateInput: ["name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "price", "Orders", "createdAt", "updatedAt"],
    ShippingMethodCreateManyInput: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "priceId", "createdAt", "updatedAt"],
    ShippingMethodUpdateManyMutationInput: ["name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "createdAt", "updatedAt"],
    PostCreateInput: ["id", "type", "caption", "mediaUrl", "isCommentsEnabled", "Author", "Comments", "Reactions", "createdAt", "updatedAt"],
    PostUpdateInput: ["type", "caption", "mediaUrl", "isCommentsEnabled", "Author", "Comments", "Reactions", "createdAt", "updatedAt"],
    PostCreateManyInput: ["id", "type", "caption", "mediaUrl", "isCommentsEnabled", "authorId", "createdAt", "updatedAt"],
    PostUpdateManyMutationInput: ["type", "caption", "mediaUrl", "isCommentsEnabled", "createdAt", "updatedAt"],
    CommentCreateInput: ["id", "text", "Post", "Author", "Replies", "Reactions", "createdAt", "updatedAt"],
    CommentUpdateInput: ["text", "Post", "Author", "Replies", "Reactions", "createdAt", "updatedAt"],
    CommentCreateManyInput: ["id", "text", "postId", "authorId", "createdAt", "updatedAt"],
    CommentUpdateManyMutationInput: ["text", "createdAt", "updatedAt"],
    ReplyCreateInput: ["id", "text", "Comment", "Author", "Reactions", "createdAt", "updatedAt"],
    ReplyUpdateInput: ["text", "Comment", "Author", "Reactions", "createdAt", "updatedAt"],
    ReplyCreateManyInput: ["id", "text", "commentId", "authorId", "createdAt", "updatedAt"],
    ReplyUpdateManyMutationInput: ["text", "createdAt", "updatedAt"],
    ReactionCreateInput: ["id", "type", "Post", "Comment", "Reply", "Author", "createdAt", "updatedAt"],
    ReactionUpdateInput: ["type", "Post", "Comment", "Reply", "Author", "createdAt", "updatedAt"],
    ReactionCreateManyInput: ["id", "type", "postId", "commentId", "replyId", "authorId", "createdAt", "updatedAt"],
    ReactionUpdateManyMutationInput: ["type", "createdAt", "updatedAt"],
    OrderLineItemCreateInput: ["id", "lineItemPrice", "SelectedProduct", "SelectedColor", "SelectedArtwork", "SelectedSize", "Order", "createdAt", "updatedAt"],
    OrderLineItemUpdateInput: ["lineItemPrice", "SelectedProduct", "SelectedColor", "SelectedArtwork", "SelectedSize", "Order", "createdAt", "updatedAt"],
    OrderLineItemCreateManyInput: ["id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt"],
    OrderLineItemUpdateManyMutationInput: ["createdAt", "updatedAt"],
    OrderCreateInput: ["id", "status", "SelectedShippingAddress", "SelectedShippingMethod", "SelectedPaymentType", "stripePaymentReference", "User", "Items", "createdAt", "updatedAt"],
    OrderUpdateInput: ["status", "SelectedShippingAddress", "SelectedShippingMethod", "SelectedPaymentType", "stripePaymentReference", "User", "Items", "createdAt", "updatedAt"],
    OrderCreateManyInput: ["id", "status", "selectedShippingAddressId", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt"],
    OrderUpdateManyMutationInput: ["status", "SelectedPaymentType", "stripePaymentReference", "createdAt", "updatedAt"],
    StringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not"],
    EnumROLEFilter: ["equals", "in", "notIn", "not"],
    StringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "isSet"],
    DateTimeFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    BoolFilter: ["equals", "not"],
    AddressListRelationFilter: ["every", "some", "none"],
    NotificationSettingsRelationFilter: ["is", "isNot"],
    UserListRelationFilter: ["every", "some", "none"],
    StringNullableListFilter: ["equals", "has", "hasEvery", "hasSome", "isEmpty"],
    OrderRelationFilter: ["is", "isNot"],
    ProductListRelationFilter: ["every", "some", "none"],
    InventoryRelationFilter: ["is", "isNot"],
    PostListRelationFilter: ["every", "some", "none"],
    CommentListRelationFilter: ["every", "some", "none"],
    ReplyListRelationFilter: ["every", "some", "none"],
    ReactionListRelationFilter: ["every", "some", "none"],
    AddressOrderByRelationAggregateInput: ["_count"],
    UserOrderByRelationAggregateInput: ["_count"],
    ProductOrderByRelationAggregateInput: ["_count"],
    PostOrderByRelationAggregateInput: ["_count"],
    CommentOrderByRelationAggregateInput: ["_count"],
    ReplyOrderByRelationAggregateInput: ["_count"],
    ReactionOrderByRelationAggregateInput: ["_count"],
    UserCountOrderByAggregateInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "followingIds", "followerIds", "productIds", "createdAt", "updatedAt"],
    UserMaxOrderByAggregateInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "createdAt", "updatedAt"],
    UserMinOrderByAggregateInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "createdAt", "updatedAt"],
    StringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max"],
    EnumROLEWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    StringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max", "isSet"],
    DateTimeWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
    BoolWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
    ArtworkListRelationFilter: ["every", "some", "none"],
    UserRelationFilter: ["is", "isNot"],
    ArtworkOrderByRelationAggregateInput: ["_count"],
    InventoryCountOrderByAggregateInput: ["id", "userId", "createdAt", "updatedAt"],
    InventoryMaxOrderByAggregateInput: ["id", "userId", "createdAt", "updatedAt"],
    InventoryMinOrderByAggregateInput: ["id", "userId", "createdAt", "updatedAt"],
    EnumADDRESS_TYPEFilter: ["equals", "in", "notIn", "not"],
    OrderListRelationFilter: ["every", "some", "none"],
    OrderOrderByRelationAggregateInput: ["_count"],
    AddressCountOrderByAggregateInput: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "userId", "createdAt", "updatedAt"],
    AddressMaxOrderByAggregateInput: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "userId", "createdAt", "updatedAt"],
    AddressMinOrderByAggregateInput: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "userId", "createdAt", "updatedAt"],
    EnumADDRESS_TYPEWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NotificationSettingsCountOrderByAggregateInput: ["id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "userId", "createdAt", "updatedAt"],
    NotificationSettingsMaxOrderByAggregateInput: ["id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "userId", "createdAt", "updatedAt"],
    NotificationSettingsMinOrderByAggregateInput: ["id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "userId", "createdAt", "updatedAt"],
    OrderLineItemListRelationFilter: ["every", "some", "none"],
    OrderLineItemOrderByRelationAggregateInput: ["_count"],
    ArtworkCountOrderByAggregateInput: ["id", "title", "description", "caption", "url", "productIds", "inventoryId", "createdAt", "updatedAt"],
    ArtworkMaxOrderByAggregateInput: ["id", "title", "description", "caption", "url", "inventoryId", "createdAt", "updatedAt"],
    ArtworkMinOrderByAggregateInput: ["id", "title", "description", "caption", "url", "inventoryId", "createdAt", "updatedAt"],
    ColorCountOrderByAggregateInput: ["id", "name", "hex", "productIds", "createdAt", "updatedAt"],
    ColorMaxOrderByAggregateInput: ["id", "name", "hex", "createdAt", "updatedAt"],
    ColorMinOrderByAggregateInput: ["id", "name", "hex", "createdAt", "updatedAt"],
    EnumSIZE_REGIONFilter: ["equals", "in", "notIn", "not"],
    SizeCountOrderByAggregateInput: ["id", "value", "region", "productIds", "createdAt", "updatedAt"],
    SizeMaxOrderByAggregateInput: ["id", "value", "region", "createdAt", "updatedAt"],
    SizeMinOrderByAggregateInput: ["id", "value", "region", "createdAt", "updatedAt"],
    EnumSIZE_REGIONWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    BrandProductListRelationFilter: ["every", "some", "none"],
    EnumSTATUSFilter: ["equals", "in", "notIn", "not"],
    BrandProductOrderByRelationAggregateInput: ["_count"],
    BrandCountOrderByAggregateInput: ["id", "name", "description", "tagline", "status", "createdAt", "updatedAt"],
    BrandMaxOrderByAggregateInput: ["id", "name", "description", "tagline", "status", "createdAt", "updatedAt"],
    BrandMinOrderByAggregateInput: ["id", "name", "description", "tagline", "status", "createdAt", "updatedAt"],
    EnumSTATUSWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    DateTimeNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "isSet"],
    EnumPRODUCT_TYPEFilter: ["equals", "in", "notIn", "not"],
    EnumPRODUCT_CATEGORYFilter: ["equals", "in", "notIn", "not"],
    BrandRelationFilter: ["is", "isNot"],
    BrandProductCountOrderByAggregateInput: ["id", "name", "releaseYear", "description", "type", "category", "brandId", "status", "createdAt", "updatedAt"],
    BrandProductMaxOrderByAggregateInput: ["id", "name", "releaseYear", "description", "type", "category", "brandId", "status", "createdAt", "updatedAt"],
    BrandProductMinOrderByAggregateInput: ["id", "name", "releaseYear", "description", "type", "category", "brandId", "status", "createdAt", "updatedAt"],
    DateTimeNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max", "isSet"],
    EnumPRODUCT_TYPEWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    EnumPRODUCT_CATEGORYWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    PriceRelationFilter: ["is", "isNot"],
    IntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    BrandProductRelationFilter: ["is", "isNot"],
    ColorListRelationFilter: ["every", "some", "none"],
    SizeListRelationFilter: ["every", "some", "none"],
    ColorOrderByRelationAggregateInput: ["_count"],
    SizeOrderByRelationAggregateInput: ["_count"],
    ProductCountOrderByAggregateInput: ["id", "description", "priceId", "availableQuantity", "photo", "gallery", "baseProductId", "artworkIds", "colorIds", "sizeIds", "likedByIds", "inventoryId", "createdAt", "updatedAt"],
    ProductAvgOrderByAggregateInput: ["availableQuantity"],
    ProductMaxOrderByAggregateInput: ["id", "description", "priceId", "availableQuantity", "photo", "baseProductId", "inventoryId", "createdAt", "updatedAt"],
    ProductMinOrderByAggregateInput: ["id", "description", "priceId", "availableQuantity", "photo", "baseProductId", "inventoryId", "createdAt", "updatedAt"],
    ProductSumOrderByAggregateInput: ["availableQuantity"],
    IntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    PriceListRelationFilter: ["every", "some", "none"],
    PriceOrderByRelationAggregateInput: ["_count"],
    CurrencyCountOrderByAggregateInput: ["id", "name", "symbol", "code", "createdAt", "updatedAt"],
    CurrencyMaxOrderByAggregateInput: ["id", "name", "symbol", "code", "createdAt", "updatedAt"],
    CurrencyMinOrderByAggregateInput: ["id", "name", "symbol", "code", "createdAt", "updatedAt"],
    CurrencyRelationFilter: ["is", "isNot"],
    ShippingMethodListRelationFilter: ["every", "some", "none"],
    ShippingMethodOrderByRelationAggregateInput: ["_count"],
    PriceCountOrderByAggregateInput: ["id", "priceInLowestDenomination", "displayPrice", "currencyId", "createdAt", "updatedAt"],
    PriceAvgOrderByAggregateInput: ["priceInLowestDenomination"],
    PriceMaxOrderByAggregateInput: ["id", "priceInLowestDenomination", "displayPrice", "currencyId", "createdAt", "updatedAt"],
    PriceMinOrderByAggregateInput: ["id", "priceInLowestDenomination", "displayPrice", "currencyId", "createdAt", "updatedAt"],
    PriceSumOrderByAggregateInput: ["priceInLowestDenomination"],
    ShippingMethodCountOrderByAggregateInput: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "priceId", "createdAt", "updatedAt"],
    ShippingMethodAvgOrderByAggregateInput: ["arrivalTimeInBusinessDays"],
    ShippingMethodMaxOrderByAggregateInput: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "priceId", "createdAt", "updatedAt"],
    ShippingMethodMinOrderByAggregateInput: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "priceId", "createdAt", "updatedAt"],
    ShippingMethodSumOrderByAggregateInput: ["arrivalTimeInBusinessDays"],
    EnumMEDIA_TYPEFilter: ["equals", "in", "notIn", "not"],
    PostCountOrderByAggregateInput: ["id", "type", "caption", "mediaUrl", "isCommentsEnabled", "authorId", "createdAt", "updatedAt"],
    PostMaxOrderByAggregateInput: ["id", "type", "caption", "isCommentsEnabled", "authorId", "createdAt", "updatedAt"],
    PostMinOrderByAggregateInput: ["id", "type", "caption", "isCommentsEnabled", "authorId", "createdAt", "updatedAt"],
    EnumMEDIA_TYPEWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    PostRelationFilter: ["is", "isNot"],
    CommentCountOrderByAggregateInput: ["id", "text", "postId", "authorId", "createdAt", "updatedAt"],
    CommentMaxOrderByAggregateInput: ["id", "text", "postId", "authorId", "createdAt", "updatedAt"],
    CommentMinOrderByAggregateInput: ["id", "text", "postId", "authorId", "createdAt", "updatedAt"],
    CommentRelationFilter: ["is", "isNot"],
    ReplyCountOrderByAggregateInput: ["id", "text", "commentId", "authorId", "createdAt", "updatedAt"],
    ReplyMaxOrderByAggregateInput: ["id", "text", "commentId", "authorId", "createdAt", "updatedAt"],
    ReplyMinOrderByAggregateInput: ["id", "text", "commentId", "authorId", "createdAt", "updatedAt"],
    EnumREACTION_TYPEFilter: ["equals", "in", "notIn", "not"],
    ReplyRelationFilter: ["is", "isNot"],
    ReactionCountOrderByAggregateInput: ["id", "type", "postId", "commentId", "replyId", "authorId", "createdAt", "updatedAt"],
    ReactionMaxOrderByAggregateInput: ["id", "type", "postId", "commentId", "replyId", "authorId", "createdAt", "updatedAt"],
    ReactionMinOrderByAggregateInput: ["id", "type", "postId", "commentId", "replyId", "authorId", "createdAt", "updatedAt"],
    EnumREACTION_TYPEWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    ProductRelationFilter: ["is", "isNot"],
    ColorRelationFilter: ["is", "isNot"],
    ArtworkRelationFilter: ["is", "isNot"],
    SizeRelationFilter: ["is", "isNot"],
    OrderLineItemCountOrderByAggregateInput: ["id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt"],
    OrderLineItemMaxOrderByAggregateInput: ["id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt"],
    OrderLineItemMinOrderByAggregateInput: ["id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt"],
    EnumORDER_STATUSFilter: ["equals", "in", "notIn", "not"],
    AddressRelationFilter: ["is", "isNot"],
    ShippingMethodRelationFilter: ["is", "isNot"],
    OrderCountOrderByAggregateInput: ["id", "status", "selectedShippingAddressId", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt"],
    OrderMaxOrderByAggregateInput: ["id", "status", "selectedShippingAddressId", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt"],
    OrderMinOrderByAggregateInput: ["id", "status", "selectedShippingAddressId", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt"],
    EnumORDER_STATUSWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    AddressCreateNestedManyWithoutUserInput: ["create", "connectOrCreate", "createMany", "connect"],
    NotificationSettingsCreateNestedOneWithoutUserInput: ["create", "connectOrCreate", "connect"],
    UserCreateNestedManyWithoutFollowersInput: ["create", "connectOrCreate", "connect"],
    UserCreatefollowingIdsInput: ["set"],
    UserCreateNestedManyWithoutFollowingInput: ["create", "connectOrCreate", "connect"],
    UserCreatefollowerIdsInput: ["set"],
    OrderCreateNestedOneWithoutUserInput: ["create", "connectOrCreate", "connect"],
    ProductCreateNestedManyWithoutLikedByInput: ["create", "connectOrCreate", "connect"],
    UserCreateproductIdsInput: ["set"],
    InventoryCreateNestedOneWithoutUserInput: ["create", "connectOrCreate", "connect"],
    PostCreateNestedManyWithoutAuthorInput: ["create", "connectOrCreate", "createMany", "connect"],
    CommentCreateNestedManyWithoutAuthorInput: ["create", "connectOrCreate", "createMany", "connect"],
    ReplyCreateNestedManyWithoutAuthorInput: ["create", "connectOrCreate", "createMany", "connect"],
    ReactionCreateNestedManyWithoutAuthorInput: ["create", "connectOrCreate", "createMany", "connect"],
    StringFieldUpdateOperationsInput: ["set"],
    EnumROLEFieldUpdateOperationsInput: ["set"],
    NullableStringFieldUpdateOperationsInput: ["set", "unset"],
    DateTimeFieldUpdateOperationsInput: ["set"],
    BoolFieldUpdateOperationsInput: ["set"],
    AddressUpdateManyWithoutUserInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    NotificationSettingsUpdateOneWithoutUserInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
    UserUpdateManyWithoutFollowersInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    UserUpdatefollowingIdsInput: ["set", "push"],
    UserUpdateManyWithoutFollowingInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    UserUpdatefollowerIdsInput: ["set", "push"],
    OrderUpdateOneWithoutUserInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
    ProductUpdateManyWithoutLikedByInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    UserUpdateproductIdsInput: ["set", "push"],
    InventoryUpdateOneWithoutUserInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
    PostUpdateManyWithoutAuthorInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    CommentUpdateManyWithoutAuthorInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ReplyUpdateManyWithoutAuthorInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ReactionUpdateManyWithoutAuthorInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ProductCreateNestedManyWithoutInventoryInput: ["create", "connectOrCreate", "createMany", "connect"],
    ArtworkCreateNestedManyWithoutInventoryInput: ["create", "connectOrCreate", "createMany", "connect"],
    UserCreateNestedOneWithoutInventoryInput: ["create", "connectOrCreate", "connect"],
    ProductUpdateManyWithoutInventoryInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ArtworkUpdateManyWithoutInventoryInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    UserUpdateOneRequiredWithoutInventoryInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    UserCreateNestedOneWithoutAddressesInput: ["create", "connectOrCreate", "connect"],
    OrderCreateNestedManyWithoutSelectedShippingAddressInput: ["create", "connectOrCreate", "createMany", "connect"],
    EnumADDRESS_TYPEFieldUpdateOperationsInput: ["set"],
    UserUpdateOneWithoutAddressesInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
    OrderUpdateManyWithoutSelectedShippingAddressInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    UserCreateNestedOneWithoutNotificationSettingsInput: ["create", "connectOrCreate", "connect"],
    UserUpdateOneWithoutNotificationSettingsInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
    ProductCreateNestedManyWithoutArtworkInput: ["create", "connectOrCreate", "connect"],
    ArtworkCreateproductIdsInput: ["set"],
    InventoryCreateNestedOneWithoutArtworkInput: ["create", "connectOrCreate", "connect"],
    OrderLineItemCreateNestedManyWithoutSelectedArtworkInput: ["create", "connectOrCreate", "createMany", "connect"],
    ProductUpdateManyWithoutArtworkInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ArtworkUpdateproductIdsInput: ["set", "push"],
    InventoryUpdateOneRequiredWithoutArtworkInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    OrderLineItemUpdateManyWithoutSelectedArtworkInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ProductCreateNestedManyWithoutColorsInput: ["create", "connectOrCreate", "connect"],
    ColorCreateproductIdsInput: ["set"],
    OrderLineItemCreateNestedManyWithoutSelectedColorInput: ["create", "connectOrCreate", "createMany", "connect"],
    ProductUpdateManyWithoutColorsInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ColorUpdateproductIdsInput: ["set", "push"],
    OrderLineItemUpdateManyWithoutSelectedColorInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ProductCreateNestedManyWithoutSizesInput: ["create", "connectOrCreate", "connect"],
    SizeCreateproductIdsInput: ["set"],
    OrderLineItemCreateNestedManyWithoutSelectedSizeInput: ["create", "connectOrCreate", "createMany", "connect"],
    EnumSIZE_REGIONFieldUpdateOperationsInput: ["set"],
    ProductUpdateManyWithoutSizesInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    SizeUpdateproductIdsInput: ["set", "push"],
    OrderLineItemUpdateManyWithoutSelectedSizeInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    BrandProductCreateNestedManyWithoutBrandInput: ["create", "connectOrCreate", "createMany", "connect"],
    BrandProductUpdateManyWithoutBrandInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    EnumSTATUSFieldUpdateOperationsInput: ["set"],
    BrandCreateNestedOneWithoutBrandProductsInput: ["create", "connectOrCreate", "connect"],
    ProductCreateNestedManyWithoutBaseProductInput: ["create", "connectOrCreate", "createMany", "connect"],
    NullableDateTimeFieldUpdateOperationsInput: ["set", "unset"],
    EnumPRODUCT_TYPEFieldUpdateOperationsInput: ["set"],
    EnumPRODUCT_CATEGORYFieldUpdateOperationsInput: ["set"],
    BrandUpdateOneRequiredWithoutBrandProductsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ProductUpdateManyWithoutBaseProductInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    PriceCreateNestedOneWithoutProductsInput: ["create", "connectOrCreate", "connect"],
    ProductCreategalleryInput: ["set"],
    BrandProductCreateNestedOneWithoutProductsInput: ["create", "connectOrCreate", "connect"],
    ArtworkCreateNestedManyWithoutProductsInput: ["create", "connectOrCreate", "connect"],
    ProductCreateartworkIdsInput: ["set"],
    ColorCreateNestedManyWithoutProductsInput: ["create", "connectOrCreate", "connect"],
    ProductCreatecolorIdsInput: ["set"],
    SizeCreateNestedManyWithoutProductsInput: ["create", "connectOrCreate", "connect"],
    ProductCreatesizeIdsInput: ["set"],
    OrderLineItemCreateNestedManyWithoutSelectedProductInput: ["create", "connectOrCreate", "createMany", "connect"],
    UserCreateNestedManyWithoutLikedProductsInput: ["create", "connectOrCreate", "connect"],
    ProductCreatelikedByIdsInput: ["set"],
    InventoryCreateNestedOneWithoutProductsInput: ["create", "connectOrCreate", "connect"],
    PriceUpdateOneRequiredWithoutProductsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    IntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
    ProductUpdategalleryInput: ["set", "push"],
    BrandProductUpdateOneRequiredWithoutProductsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ArtworkUpdateManyWithoutProductsInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ProductUpdateartworkIdsInput: ["set", "push"],
    ColorUpdateManyWithoutProductsInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ProductUpdatecolorIdsInput: ["set", "push"],
    SizeUpdateManyWithoutProductsInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ProductUpdatesizeIdsInput: ["set", "push"],
    OrderLineItemUpdateManyWithoutSelectedProductInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    UserUpdateManyWithoutLikedProductsInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ProductUpdatelikedByIdsInput: ["set", "push"],
    InventoryUpdateOneRequiredWithoutProductsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    PriceCreateNestedManyWithoutCurrencyInput: ["create", "connectOrCreate", "createMany", "connect"],
    PriceUpdateManyWithoutCurrencyInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    CurrencyCreateNestedOneWithoutPricesInput: ["create", "connectOrCreate", "connect"],
    ShippingMethodCreateNestedManyWithoutPriceInput: ["create", "connectOrCreate", "createMany", "connect"],
    ProductCreateNestedManyWithoutPriceInput: ["create", "connectOrCreate", "createMany", "connect"],
    OrderLineItemCreateNestedManyWithoutLineItemPriceInput: ["create", "connectOrCreate", "createMany", "connect"],
    CurrencyUpdateOneRequiredWithoutPricesInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ShippingMethodUpdateManyWithoutPriceInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ProductUpdateManyWithoutPriceInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    OrderLineItemUpdateManyWithoutLineItemPriceInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    PriceCreateNestedOneWithoutShippingMethodsInput: ["create", "connectOrCreate", "connect"],
    OrderCreateNestedManyWithoutSelectedShippingMethodInput: ["create", "connectOrCreate", "createMany", "connect"],
    PriceUpdateOneRequiredWithoutShippingMethodsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    OrderUpdateManyWithoutSelectedShippingMethodInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    PostCreatemediaUrlInput: ["set"],
    UserCreateNestedOneWithoutPostsInput: ["create", "connectOrCreate", "connect"],
    CommentCreateNestedManyWithoutPostInput: ["create", "connectOrCreate", "createMany", "connect"],
    ReactionCreateNestedManyWithoutPostInput: ["create", "connectOrCreate", "createMany", "connect"],
    EnumMEDIA_TYPEFieldUpdateOperationsInput: ["set"],
    PostUpdatemediaUrlInput: ["set", "push"],
    UserUpdateOneRequiredWithoutPostsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    CommentUpdateManyWithoutPostInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ReactionUpdateManyWithoutPostInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    PostCreateNestedOneWithoutCommentsInput: ["create", "connectOrCreate", "connect"],
    UserCreateNestedOneWithoutCommentsInput: ["create", "connectOrCreate", "connect"],
    ReplyCreateNestedManyWithoutCommentInput: ["create", "connectOrCreate", "createMany", "connect"],
    ReactionCreateNestedManyWithoutCommentInput: ["create", "connectOrCreate", "createMany", "connect"],
    PostUpdateOneRequiredWithoutCommentsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    UserUpdateOneRequiredWithoutCommentsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ReplyUpdateManyWithoutCommentInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    ReactionUpdateManyWithoutCommentInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    CommentCreateNestedOneWithoutRepliesInput: ["create", "connectOrCreate", "connect"],
    UserCreateNestedOneWithoutRepliesInput: ["create", "connectOrCreate", "connect"],
    ReactionCreateNestedManyWithoutReplyInput: ["create", "connectOrCreate", "createMany", "connect"],
    CommentUpdateOneRequiredWithoutRepliesInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    UserUpdateOneRequiredWithoutRepliesInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ReactionUpdateManyWithoutReplyInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    PostCreateNestedOneWithoutReactionsInput: ["create", "connectOrCreate", "connect"],
    CommentCreateNestedOneWithoutReactionsInput: ["create", "connectOrCreate", "connect"],
    ReplyCreateNestedOneWithoutReactionsInput: ["create", "connectOrCreate", "connect"],
    UserCreateNestedOneWithoutReactionsInput: ["create", "connectOrCreate", "connect"],
    EnumREACTION_TYPEFieldUpdateOperationsInput: ["set"],
    PostUpdateOneWithoutReactionsInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
    CommentUpdateOneWithoutReactionsInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
    ReplyUpdateOneWithoutReactionsInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
    UserUpdateOneRequiredWithoutReactionsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    PriceCreateNestedOneWithoutOrderLineItemsInput: ["create", "connectOrCreate", "connect"],
    ProductCreateNestedOneWithoutOrderLineItemsInput: ["create", "connectOrCreate", "connect"],
    ColorCreateNestedOneWithoutOrderLineItemsInput: ["create", "connectOrCreate", "connect"],
    ArtworkCreateNestedOneWithoutOrderLineItemsInput: ["create", "connectOrCreate", "connect"],
    SizeCreateNestedOneWithoutOrderLineItemsInput: ["create", "connectOrCreate", "connect"],
    OrderCreateNestedOneWithoutItemsInput: ["create", "connectOrCreate", "connect"],
    PriceUpdateOneRequiredWithoutOrderLineItemsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ProductUpdateOneRequiredWithoutOrderLineItemsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ColorUpdateOneRequiredWithoutOrderLineItemsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    ArtworkUpdateOneRequiredWithoutOrderLineItemsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    SizeUpdateOneRequiredWithoutOrderLineItemsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    OrderUpdateOneRequiredWithoutItemsInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    AddressCreateNestedOneWithoutOrdersInput: ["create", "connectOrCreate", "connect"],
    ShippingMethodCreateNestedOneWithoutOrdersInput: ["create", "connectOrCreate", "connect"],
    UserCreateNestedOneWithoutOrderInput: ["create", "connectOrCreate", "connect"],
    OrderLineItemCreateNestedManyWithoutOrderInput: ["create", "connectOrCreate", "createMany", "connect"],
    EnumORDER_STATUSFieldUpdateOperationsInput: ["set"],
    AddressUpdateOneWithoutOrdersInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
    ShippingMethodUpdateOneWithoutOrdersInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
    UserUpdateOneRequiredWithoutOrderInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
    OrderLineItemUpdateManyWithoutOrderInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
    NestedStringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not"],
    NestedEnumROLEFilter: ["equals", "in", "notIn", "not"],
    NestedStringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "isSet"],
    NestedDateTimeFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedBoolFilter: ["equals", "not"],
    NestedStringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max"],
    NestedIntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedEnumROLEWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NestedStringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max", "isSet"],
    NestedIntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "isSet"],
    NestedDateTimeWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
    NestedBoolWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
    NestedEnumADDRESS_TYPEFilter: ["equals", "in", "notIn", "not"],
    NestedEnumADDRESS_TYPEWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NestedEnumSIZE_REGIONFilter: ["equals", "in", "notIn", "not"],
    NestedEnumSIZE_REGIONWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NestedEnumSTATUSFilter: ["equals", "in", "notIn", "not"],
    NestedEnumSTATUSWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NestedDateTimeNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "isSet"],
    NestedEnumPRODUCT_TYPEFilter: ["equals", "in", "notIn", "not"],
    NestedEnumPRODUCT_CATEGORYFilter: ["equals", "in", "notIn", "not"],
    NestedDateTimeNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max", "isSet"],
    NestedEnumPRODUCT_TYPEWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NestedEnumPRODUCT_CATEGORYWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NestedIntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    NestedFloatFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedEnumMEDIA_TYPEFilter: ["equals", "in", "notIn", "not"],
    NestedEnumMEDIA_TYPEWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NestedEnumREACTION_TYPEFilter: ["equals", "in", "notIn", "not"],
    NestedEnumREACTION_TYPEWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    NestedEnumORDER_STATUSFilter: ["equals", "in", "notIn", "not"],
    NestedEnumORDER_STATUSWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
    AddressCreateWithoutUserInput: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "Orders", "createdAt", "updatedAt"],
    AddressCreateOrConnectWithoutUserInput: ["where", "create"],
    AddressCreateManyUserInputEnvelope: ["data"],
    NotificationSettingsCreateWithoutUserInput: ["id", "newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "createdAt", "updatedAt"],
    NotificationSettingsCreateOrConnectWithoutUserInput: ["where", "create"],
    UserCreateWithoutFollowersInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserCreateOrConnectWithoutFollowersInput: ["where", "create"],
    UserCreateWithoutFollowingInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserCreateOrConnectWithoutFollowingInput: ["where", "create"],
    OrderCreateWithoutUserInput: ["id", "status", "SelectedShippingAddress", "SelectedShippingMethod", "SelectedPaymentType", "stripePaymentReference", "Items", "createdAt", "updatedAt"],
    OrderCreateOrConnectWithoutUserInput: ["where", "create"],
    ProductCreateWithoutLikedByInput: ["id", "description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    ProductCreateOrConnectWithoutLikedByInput: ["where", "create"],
    InventoryCreateWithoutUserInput: ["id", "Products", "Artwork", "createdAt", "updatedAt"],
    InventoryCreateOrConnectWithoutUserInput: ["where", "create"],
    PostCreateWithoutAuthorInput: ["id", "type", "caption", "mediaUrl", "isCommentsEnabled", "Comments", "Reactions", "createdAt", "updatedAt"],
    PostCreateOrConnectWithoutAuthorInput: ["where", "create"],
    PostCreateManyAuthorInputEnvelope: ["data"],
    CommentCreateWithoutAuthorInput: ["id", "text", "Post", "Replies", "Reactions", "createdAt", "updatedAt"],
    CommentCreateOrConnectWithoutAuthorInput: ["where", "create"],
    CommentCreateManyAuthorInputEnvelope: ["data"],
    ReplyCreateWithoutAuthorInput: ["id", "text", "Comment", "Reactions", "createdAt", "updatedAt"],
    ReplyCreateOrConnectWithoutAuthorInput: ["where", "create"],
    ReplyCreateManyAuthorInputEnvelope: ["data"],
    ReactionCreateWithoutAuthorInput: ["id", "type", "Post", "Comment", "Reply", "createdAt", "updatedAt"],
    ReactionCreateOrConnectWithoutAuthorInput: ["where", "create"],
    ReactionCreateManyAuthorInputEnvelope: ["data"],
    AddressUpsertWithWhereUniqueWithoutUserInput: ["where", "update", "create"],
    AddressUpdateWithWhereUniqueWithoutUserInput: ["where", "data"],
    AddressUpdateManyWithWhereWithoutUserInput: ["where", "data"],
    AddressScalarWhereInput: ["AND", "OR", "NOT", "id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "userId", "createdAt", "updatedAt"],
    NotificationSettingsUpsertWithoutUserInput: ["update", "create"],
    NotificationSettingsUpdateWithoutUserInput: ["newArrivals", "orderUpdates", "promotions", "saleAlerts", "postsByArtistsIFollow", "postsByBrandsIFollow", "createdAt", "updatedAt"],
    UserUpsertWithWhereUniqueWithoutFollowersInput: ["where", "update", "create"],
    UserUpdateWithWhereUniqueWithoutFollowersInput: ["where", "data"],
    UserUpdateManyWithWhereWithoutFollowersInput: ["where", "data"],
    UserScalarWhereInput: ["AND", "OR", "NOT", "uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "followingIds", "followerIds", "productIds", "createdAt", "updatedAt"],
    UserUpsertWithWhereUniqueWithoutFollowingInput: ["where", "update", "create"],
    UserUpdateWithWhereUniqueWithoutFollowingInput: ["where", "data"],
    UserUpdateManyWithWhereWithoutFollowingInput: ["where", "data"],
    OrderUpsertWithoutUserInput: ["update", "create"],
    OrderUpdateWithoutUserInput: ["status", "SelectedShippingAddress", "SelectedShippingMethod", "SelectedPaymentType", "stripePaymentReference", "Items", "createdAt", "updatedAt"],
    ProductUpsertWithWhereUniqueWithoutLikedByInput: ["where", "update", "create"],
    ProductUpdateWithWhereUniqueWithoutLikedByInput: ["where", "data"],
    ProductUpdateManyWithWhereWithoutLikedByInput: ["where", "data"],
    ProductScalarWhereInput: ["AND", "OR", "NOT", "id", "description", "priceId", "availableQuantity", "photo", "gallery", "baseProductId", "artworkIds", "colorIds", "sizeIds", "likedByIds", "inventoryId", "createdAt", "updatedAt"],
    InventoryUpsertWithoutUserInput: ["update", "create"],
    InventoryUpdateWithoutUserInput: ["Products", "Artwork", "createdAt", "updatedAt"],
    PostUpsertWithWhereUniqueWithoutAuthorInput: ["where", "update", "create"],
    PostUpdateWithWhereUniqueWithoutAuthorInput: ["where", "data"],
    PostUpdateManyWithWhereWithoutAuthorInput: ["where", "data"],
    PostScalarWhereInput: ["AND", "OR", "NOT", "id", "type", "caption", "mediaUrl", "isCommentsEnabled", "authorId", "createdAt", "updatedAt"],
    CommentUpsertWithWhereUniqueWithoutAuthorInput: ["where", "update", "create"],
    CommentUpdateWithWhereUniqueWithoutAuthorInput: ["where", "data"],
    CommentUpdateManyWithWhereWithoutAuthorInput: ["where", "data"],
    CommentScalarWhereInput: ["AND", "OR", "NOT", "id", "text", "postId", "authorId", "createdAt", "updatedAt"],
    ReplyUpsertWithWhereUniqueWithoutAuthorInput: ["where", "update", "create"],
    ReplyUpdateWithWhereUniqueWithoutAuthorInput: ["where", "data"],
    ReplyUpdateManyWithWhereWithoutAuthorInput: ["where", "data"],
    ReplyScalarWhereInput: ["AND", "OR", "NOT", "id", "text", "commentId", "authorId", "createdAt", "updatedAt"],
    ReactionUpsertWithWhereUniqueWithoutAuthorInput: ["where", "update", "create"],
    ReactionUpdateWithWhereUniqueWithoutAuthorInput: ["where", "data"],
    ReactionUpdateManyWithWhereWithoutAuthorInput: ["where", "data"],
    ReactionScalarWhereInput: ["AND", "OR", "NOT", "id", "type", "postId", "commentId", "replyId", "authorId", "createdAt", "updatedAt"],
    ProductCreateWithoutInventoryInput: ["id", "description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "createdAt", "updatedAt"],
    ProductCreateOrConnectWithoutInventoryInput: ["where", "create"],
    ProductCreateManyInventoryInputEnvelope: ["data"],
    ArtworkCreateWithoutInventoryInput: ["id", "title", "description", "caption", "url", "Products", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    ArtworkCreateOrConnectWithoutInventoryInput: ["where", "create"],
    ArtworkCreateManyInventoryInputEnvelope: ["data"],
    UserCreateWithoutInventoryInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserCreateOrConnectWithoutInventoryInput: ["where", "create"],
    ProductUpsertWithWhereUniqueWithoutInventoryInput: ["where", "update", "create"],
    ProductUpdateWithWhereUniqueWithoutInventoryInput: ["where", "data"],
    ProductUpdateManyWithWhereWithoutInventoryInput: ["where", "data"],
    ArtworkUpsertWithWhereUniqueWithoutInventoryInput: ["where", "update", "create"],
    ArtworkUpdateWithWhereUniqueWithoutInventoryInput: ["where", "data"],
    ArtworkUpdateManyWithWhereWithoutInventoryInput: ["where", "data"],
    ArtworkScalarWhereInput: ["AND", "OR", "NOT", "id", "title", "description", "caption", "url", "productIds", "inventoryId", "createdAt", "updatedAt"],
    UserUpsertWithoutInventoryInput: ["update", "create"],
    UserUpdateWithoutInventoryInput: ["uid", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserCreateWithoutAddressesInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserCreateOrConnectWithoutAddressesInput: ["where", "create"],
    OrderCreateWithoutSelectedShippingAddressInput: ["id", "status", "SelectedShippingMethod", "SelectedPaymentType", "stripePaymentReference", "User", "Items", "createdAt", "updatedAt"],
    OrderCreateOrConnectWithoutSelectedShippingAddressInput: ["where", "create"],
    OrderCreateManySelectedShippingAddressInputEnvelope: ["data"],
    UserUpsertWithoutAddressesInput: ["update", "create"],
    UserUpdateWithoutAddressesInput: ["uid", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    OrderUpsertWithWhereUniqueWithoutSelectedShippingAddressInput: ["where", "update", "create"],
    OrderUpdateWithWhereUniqueWithoutSelectedShippingAddressInput: ["where", "data"],
    OrderUpdateManyWithWhereWithoutSelectedShippingAddressInput: ["where", "data"],
    OrderScalarWhereInput: ["AND", "OR", "NOT", "id", "status", "selectedShippingAddressId", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt"],
    UserCreateWithoutNotificationSettingsInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserCreateOrConnectWithoutNotificationSettingsInput: ["where", "create"],
    UserUpsertWithoutNotificationSettingsInput: ["update", "create"],
    UserUpdateWithoutNotificationSettingsInput: ["uid", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    ProductCreateWithoutArtworkInput: ["id", "description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    ProductCreateOrConnectWithoutArtworkInput: ["where", "create"],
    InventoryCreateWithoutArtworkInput: ["id", "Products", "User", "createdAt", "updatedAt"],
    InventoryCreateOrConnectWithoutArtworkInput: ["where", "create"],
    OrderLineItemCreateWithoutSelectedArtworkInput: ["id", "lineItemPrice", "SelectedProduct", "SelectedColor", "SelectedSize", "Order", "createdAt", "updatedAt"],
    OrderLineItemCreateOrConnectWithoutSelectedArtworkInput: ["where", "create"],
    OrderLineItemCreateManySelectedArtworkInputEnvelope: ["data"],
    ProductUpsertWithWhereUniqueWithoutArtworkInput: ["where", "update", "create"],
    ProductUpdateWithWhereUniqueWithoutArtworkInput: ["where", "data"],
    ProductUpdateManyWithWhereWithoutArtworkInput: ["where", "data"],
    InventoryUpsertWithoutArtworkInput: ["update", "create"],
    InventoryUpdateWithoutArtworkInput: ["Products", "User", "createdAt", "updatedAt"],
    OrderLineItemUpsertWithWhereUniqueWithoutSelectedArtworkInput: ["where", "update", "create"],
    OrderLineItemUpdateWithWhereUniqueWithoutSelectedArtworkInput: ["where", "data"],
    OrderLineItemUpdateManyWithWhereWithoutSelectedArtworkInput: ["where", "data"],
    OrderLineItemScalarWhereInput: ["AND", "OR", "NOT", "id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt"],
    ProductCreateWithoutColorsInput: ["id", "description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    ProductCreateOrConnectWithoutColorsInput: ["where", "create"],
    OrderLineItemCreateWithoutSelectedColorInput: ["id", "lineItemPrice", "SelectedProduct", "SelectedArtwork", "SelectedSize", "Order", "createdAt", "updatedAt"],
    OrderLineItemCreateOrConnectWithoutSelectedColorInput: ["where", "create"],
    OrderLineItemCreateManySelectedColorInputEnvelope: ["data"],
    ProductUpsertWithWhereUniqueWithoutColorsInput: ["where", "update", "create"],
    ProductUpdateWithWhereUniqueWithoutColorsInput: ["where", "data"],
    ProductUpdateManyWithWhereWithoutColorsInput: ["where", "data"],
    OrderLineItemUpsertWithWhereUniqueWithoutSelectedColorInput: ["where", "update", "create"],
    OrderLineItemUpdateWithWhereUniqueWithoutSelectedColorInput: ["where", "data"],
    OrderLineItemUpdateManyWithWhereWithoutSelectedColorInput: ["where", "data"],
    ProductCreateWithoutSizesInput: ["id", "description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "Colors", "colorIds", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    ProductCreateOrConnectWithoutSizesInput: ["where", "create"],
    OrderLineItemCreateWithoutSelectedSizeInput: ["id", "lineItemPrice", "SelectedProduct", "SelectedColor", "SelectedArtwork", "Order", "createdAt", "updatedAt"],
    OrderLineItemCreateOrConnectWithoutSelectedSizeInput: ["where", "create"],
    OrderLineItemCreateManySelectedSizeInputEnvelope: ["data"],
    ProductUpsertWithWhereUniqueWithoutSizesInput: ["where", "update", "create"],
    ProductUpdateWithWhereUniqueWithoutSizesInput: ["where", "data"],
    ProductUpdateManyWithWhereWithoutSizesInput: ["where", "data"],
    OrderLineItemUpsertWithWhereUniqueWithoutSelectedSizeInput: ["where", "update", "create"],
    OrderLineItemUpdateWithWhereUniqueWithoutSelectedSizeInput: ["where", "data"],
    OrderLineItemUpdateManyWithWhereWithoutSelectedSizeInput: ["where", "data"],
    BrandProductCreateWithoutBrandInput: ["id", "name", "releaseYear", "description", "type", "category", "status", "Products", "createdAt", "updatedAt"],
    BrandProductCreateOrConnectWithoutBrandInput: ["where", "create"],
    BrandProductCreateManyBrandInputEnvelope: ["data"],
    BrandProductUpsertWithWhereUniqueWithoutBrandInput: ["where", "update", "create"],
    BrandProductUpdateWithWhereUniqueWithoutBrandInput: ["where", "data"],
    BrandProductUpdateManyWithWhereWithoutBrandInput: ["where", "data"],
    BrandProductScalarWhereInput: ["AND", "OR", "NOT", "id", "name", "releaseYear", "description", "type", "category", "brandId", "status", "createdAt", "updatedAt"],
    BrandCreateWithoutBrandProductsInput: ["id", "name", "description", "tagline", "status", "createdAt", "updatedAt"],
    BrandCreateOrConnectWithoutBrandProductsInput: ["where", "create"],
    ProductCreateWithoutBaseProductInput: ["id", "description", "price", "availableQuantity", "photo", "gallery", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    ProductCreateOrConnectWithoutBaseProductInput: ["where", "create"],
    ProductCreateManyBaseProductInputEnvelope: ["data"],
    BrandUpsertWithoutBrandProductsInput: ["update", "create"],
    BrandUpdateWithoutBrandProductsInput: ["name", "description", "tagline", "status", "createdAt", "updatedAt"],
    ProductUpsertWithWhereUniqueWithoutBaseProductInput: ["where", "update", "create"],
    ProductUpdateWithWhereUniqueWithoutBaseProductInput: ["where", "data"],
    ProductUpdateManyWithWhereWithoutBaseProductInput: ["where", "data"],
    PriceCreateWithoutProductsInput: ["id", "priceInLowestDenomination", "displayPrice", "currency", "ShippingMethods", "OrderLineItems", "createdAt", "updatedAt"],
    PriceCreateOrConnectWithoutProductsInput: ["where", "create"],
    BrandProductCreateWithoutProductsInput: ["id", "name", "releaseYear", "description", "type", "category", "brand", "status", "createdAt", "updatedAt"],
    BrandProductCreateOrConnectWithoutProductsInput: ["where", "create"],
    ArtworkCreateWithoutProductsInput: ["id", "title", "description", "caption", "url", "productIds", "Inventory", "OrderLineItems", "createdAt", "updatedAt"],
    ArtworkCreateOrConnectWithoutProductsInput: ["where", "create"],
    ColorCreateWithoutProductsInput: ["id", "name", "hex", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    ColorCreateOrConnectWithoutProductsInput: ["where", "create"],
    SizeCreateWithoutProductsInput: ["id", "value", "region", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    SizeCreateOrConnectWithoutProductsInput: ["where", "create"],
    OrderLineItemCreateWithoutSelectedProductInput: ["id", "lineItemPrice", "SelectedColor", "SelectedArtwork", "SelectedSize", "Order", "createdAt", "updatedAt"],
    OrderLineItemCreateOrConnectWithoutSelectedProductInput: ["where", "create"],
    OrderLineItemCreateManySelectedProductInputEnvelope: ["data"],
    UserCreateWithoutLikedProductsInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserCreateOrConnectWithoutLikedProductsInput: ["where", "create"],
    InventoryCreateWithoutProductsInput: ["id", "Artwork", "User", "createdAt", "updatedAt"],
    InventoryCreateOrConnectWithoutProductsInput: ["where", "create"],
    PriceUpsertWithoutProductsInput: ["update", "create"],
    PriceUpdateWithoutProductsInput: ["priceInLowestDenomination", "displayPrice", "currency", "ShippingMethods", "OrderLineItems", "createdAt", "updatedAt"],
    BrandProductUpsertWithoutProductsInput: ["update", "create"],
    BrandProductUpdateWithoutProductsInput: ["name", "releaseYear", "description", "type", "category", "brand", "status", "createdAt", "updatedAt"],
    ArtworkUpsertWithWhereUniqueWithoutProductsInput: ["where", "update", "create"],
    ArtworkUpdateWithWhereUniqueWithoutProductsInput: ["where", "data"],
    ArtworkUpdateManyWithWhereWithoutProductsInput: ["where", "data"],
    ColorUpsertWithWhereUniqueWithoutProductsInput: ["where", "update", "create"],
    ColorUpdateWithWhereUniqueWithoutProductsInput: ["where", "data"],
    ColorUpdateManyWithWhereWithoutProductsInput: ["where", "data"],
    ColorScalarWhereInput: ["AND", "OR", "NOT", "id", "name", "hex", "productIds", "createdAt", "updatedAt"],
    SizeUpsertWithWhereUniqueWithoutProductsInput: ["where", "update", "create"],
    SizeUpdateWithWhereUniqueWithoutProductsInput: ["where", "data"],
    SizeUpdateManyWithWhereWithoutProductsInput: ["where", "data"],
    SizeScalarWhereInput: ["AND", "OR", "NOT", "id", "value", "region", "productIds", "createdAt", "updatedAt"],
    OrderLineItemUpsertWithWhereUniqueWithoutSelectedProductInput: ["where", "update", "create"],
    OrderLineItemUpdateWithWhereUniqueWithoutSelectedProductInput: ["where", "data"],
    OrderLineItemUpdateManyWithWhereWithoutSelectedProductInput: ["where", "data"],
    UserUpsertWithWhereUniqueWithoutLikedProductsInput: ["where", "update", "create"],
    UserUpdateWithWhereUniqueWithoutLikedProductsInput: ["where", "data"],
    UserUpdateManyWithWhereWithoutLikedProductsInput: ["where", "data"],
    InventoryUpsertWithoutProductsInput: ["update", "create"],
    InventoryUpdateWithoutProductsInput: ["Artwork", "User", "createdAt", "updatedAt"],
    PriceCreateWithoutCurrencyInput: ["id", "priceInLowestDenomination", "displayPrice", "ShippingMethods", "Products", "OrderLineItems", "createdAt", "updatedAt"],
    PriceCreateOrConnectWithoutCurrencyInput: ["where", "create"],
    PriceCreateManyCurrencyInputEnvelope: ["data"],
    PriceUpsertWithWhereUniqueWithoutCurrencyInput: ["where", "update", "create"],
    PriceUpdateWithWhereUniqueWithoutCurrencyInput: ["where", "data"],
    PriceUpdateManyWithWhereWithoutCurrencyInput: ["where", "data"],
    PriceScalarWhereInput: ["AND", "OR", "NOT", "id", "priceInLowestDenomination", "displayPrice", "currencyId", "createdAt", "updatedAt"],
    CurrencyCreateWithoutPricesInput: ["id", "name", "symbol", "code", "createdAt", "updatedAt"],
    CurrencyCreateOrConnectWithoutPricesInput: ["where", "create"],
    ShippingMethodCreateWithoutPriceInput: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "Orders", "createdAt", "updatedAt"],
    ShippingMethodCreateOrConnectWithoutPriceInput: ["where", "create"],
    ShippingMethodCreateManyPriceInputEnvelope: ["data"],
    ProductCreateWithoutPriceInput: ["id", "description", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    ProductCreateOrConnectWithoutPriceInput: ["where", "create"],
    ProductCreateManyPriceInputEnvelope: ["data"],
    OrderLineItemCreateWithoutLineItemPriceInput: ["id", "SelectedProduct", "SelectedColor", "SelectedArtwork", "SelectedSize", "Order", "createdAt", "updatedAt"],
    OrderLineItemCreateOrConnectWithoutLineItemPriceInput: ["where", "create"],
    OrderLineItemCreateManyLineItemPriceInputEnvelope: ["data"],
    CurrencyUpsertWithoutPricesInput: ["update", "create"],
    CurrencyUpdateWithoutPricesInput: ["name", "symbol", "code", "createdAt", "updatedAt"],
    ShippingMethodUpsertWithWhereUniqueWithoutPriceInput: ["where", "update", "create"],
    ShippingMethodUpdateWithWhereUniqueWithoutPriceInput: ["where", "data"],
    ShippingMethodUpdateManyWithWhereWithoutPriceInput: ["where", "data"],
    ShippingMethodScalarWhereInput: ["AND", "OR", "NOT", "id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "priceId", "createdAt", "updatedAt"],
    ProductUpsertWithWhereUniqueWithoutPriceInput: ["where", "update", "create"],
    ProductUpdateWithWhereUniqueWithoutPriceInput: ["where", "data"],
    ProductUpdateManyWithWhereWithoutPriceInput: ["where", "data"],
    OrderLineItemUpsertWithWhereUniqueWithoutLineItemPriceInput: ["where", "update", "create"],
    OrderLineItemUpdateWithWhereUniqueWithoutLineItemPriceInput: ["where", "data"],
    OrderLineItemUpdateManyWithWhereWithoutLineItemPriceInput: ["where", "data"],
    PriceCreateWithoutShippingMethodsInput: ["id", "priceInLowestDenomination", "displayPrice", "currency", "Products", "OrderLineItems", "createdAt", "updatedAt"],
    PriceCreateOrConnectWithoutShippingMethodsInput: ["where", "create"],
    OrderCreateWithoutSelectedShippingMethodInput: ["id", "status", "SelectedShippingAddress", "SelectedPaymentType", "stripePaymentReference", "User", "Items", "createdAt", "updatedAt"],
    OrderCreateOrConnectWithoutSelectedShippingMethodInput: ["where", "create"],
    OrderCreateManySelectedShippingMethodInputEnvelope: ["data"],
    PriceUpsertWithoutShippingMethodsInput: ["update", "create"],
    PriceUpdateWithoutShippingMethodsInput: ["priceInLowestDenomination", "displayPrice", "currency", "Products", "OrderLineItems", "createdAt", "updatedAt"],
    OrderUpsertWithWhereUniqueWithoutSelectedShippingMethodInput: ["where", "update", "create"],
    OrderUpdateWithWhereUniqueWithoutSelectedShippingMethodInput: ["where", "data"],
    OrderUpdateManyWithWhereWithoutSelectedShippingMethodInput: ["where", "data"],
    UserCreateWithoutPostsInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserCreateOrConnectWithoutPostsInput: ["where", "create"],
    CommentCreateWithoutPostInput: ["id", "text", "Author", "Replies", "Reactions", "createdAt", "updatedAt"],
    CommentCreateOrConnectWithoutPostInput: ["where", "create"],
    CommentCreateManyPostInputEnvelope: ["data"],
    ReactionCreateWithoutPostInput: ["id", "type", "Comment", "Reply", "Author", "createdAt", "updatedAt"],
    ReactionCreateOrConnectWithoutPostInput: ["where", "create"],
    ReactionCreateManyPostInputEnvelope: ["data"],
    UserUpsertWithoutPostsInput: ["update", "create"],
    UserUpdateWithoutPostsInput: ["uid", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    CommentUpsertWithWhereUniqueWithoutPostInput: ["where", "update", "create"],
    CommentUpdateWithWhereUniqueWithoutPostInput: ["where", "data"],
    CommentUpdateManyWithWhereWithoutPostInput: ["where", "data"],
    ReactionUpsertWithWhereUniqueWithoutPostInput: ["where", "update", "create"],
    ReactionUpdateWithWhereUniqueWithoutPostInput: ["where", "data"],
    ReactionUpdateManyWithWhereWithoutPostInput: ["where", "data"],
    PostCreateWithoutCommentsInput: ["id", "type", "caption", "mediaUrl", "isCommentsEnabled", "Author", "Reactions", "createdAt", "updatedAt"],
    PostCreateOrConnectWithoutCommentsInput: ["where", "create"],
    UserCreateWithoutCommentsInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserCreateOrConnectWithoutCommentsInput: ["where", "create"],
    ReplyCreateWithoutCommentInput: ["id", "text", "Author", "Reactions", "createdAt", "updatedAt"],
    ReplyCreateOrConnectWithoutCommentInput: ["where", "create"],
    ReplyCreateManyCommentInputEnvelope: ["data"],
    ReactionCreateWithoutCommentInput: ["id", "type", "Post", "Reply", "Author", "createdAt", "updatedAt"],
    ReactionCreateOrConnectWithoutCommentInput: ["where", "create"],
    ReactionCreateManyCommentInputEnvelope: ["data"],
    PostUpsertWithoutCommentsInput: ["update", "create"],
    PostUpdateWithoutCommentsInput: ["type", "caption", "mediaUrl", "isCommentsEnabled", "Author", "Reactions", "createdAt", "updatedAt"],
    UserUpsertWithoutCommentsInput: ["update", "create"],
    UserUpdateWithoutCommentsInput: ["uid", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Replies", "Reactions", "createdAt", "updatedAt"],
    ReplyUpsertWithWhereUniqueWithoutCommentInput: ["where", "update", "create"],
    ReplyUpdateWithWhereUniqueWithoutCommentInput: ["where", "data"],
    ReplyUpdateManyWithWhereWithoutCommentInput: ["where", "data"],
    ReactionUpsertWithWhereUniqueWithoutCommentInput: ["where", "update", "create"],
    ReactionUpdateWithWhereUniqueWithoutCommentInput: ["where", "data"],
    ReactionUpdateManyWithWhereWithoutCommentInput: ["where", "data"],
    CommentCreateWithoutRepliesInput: ["id", "text", "Post", "Author", "Reactions", "createdAt", "updatedAt"],
    CommentCreateOrConnectWithoutRepliesInput: ["where", "create"],
    UserCreateWithoutRepliesInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Reactions", "createdAt", "updatedAt"],
    UserCreateOrConnectWithoutRepliesInput: ["where", "create"],
    ReactionCreateWithoutReplyInput: ["id", "type", "Post", "Comment", "Author", "createdAt", "updatedAt"],
    ReactionCreateOrConnectWithoutReplyInput: ["where", "create"],
    ReactionCreateManyReplyInputEnvelope: ["data"],
    CommentUpsertWithoutRepliesInput: ["update", "create"],
    CommentUpdateWithoutRepliesInput: ["text", "Post", "Author", "Reactions", "createdAt", "updatedAt"],
    UserUpsertWithoutRepliesInput: ["update", "create"],
    UserUpdateWithoutRepliesInput: ["uid", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Reactions", "createdAt", "updatedAt"],
    ReactionUpsertWithWhereUniqueWithoutReplyInput: ["where", "update", "create"],
    ReactionUpdateWithWhereUniqueWithoutReplyInput: ["where", "data"],
    ReactionUpdateManyWithWhereWithoutReplyInput: ["where", "data"],
    PostCreateWithoutReactionsInput: ["id", "type", "caption", "mediaUrl", "isCommentsEnabled", "Author", "Comments", "createdAt", "updatedAt"],
    PostCreateOrConnectWithoutReactionsInput: ["where", "create"],
    CommentCreateWithoutReactionsInput: ["id", "text", "Post", "Author", "Replies", "createdAt", "updatedAt"],
    CommentCreateOrConnectWithoutReactionsInput: ["where", "create"],
    ReplyCreateWithoutReactionsInput: ["id", "text", "Comment", "Author", "createdAt", "updatedAt"],
    ReplyCreateOrConnectWithoutReactionsInput: ["where", "create"],
    UserCreateWithoutReactionsInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "createdAt", "updatedAt"],
    UserCreateOrConnectWithoutReactionsInput: ["where", "create"],
    PostUpsertWithoutReactionsInput: ["update", "create"],
    PostUpdateWithoutReactionsInput: ["type", "caption", "mediaUrl", "isCommentsEnabled", "Author", "Comments", "createdAt", "updatedAt"],
    CommentUpsertWithoutReactionsInput: ["update", "create"],
    CommentUpdateWithoutReactionsInput: ["text", "Post", "Author", "Replies", "createdAt", "updatedAt"],
    ReplyUpsertWithoutReactionsInput: ["update", "create"],
    ReplyUpdateWithoutReactionsInput: ["text", "Comment", "Author", "createdAt", "updatedAt"],
    UserUpsertWithoutReactionsInput: ["update", "create"],
    UserUpdateWithoutReactionsInput: ["uid", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "createdAt", "updatedAt"],
    PriceCreateWithoutOrderLineItemsInput: ["id", "priceInLowestDenomination", "displayPrice", "currency", "ShippingMethods", "Products", "createdAt", "updatedAt"],
    PriceCreateOrConnectWithoutOrderLineItemsInput: ["where", "create"],
    ProductCreateWithoutOrderLineItemsInput: ["id", "description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    ProductCreateOrConnectWithoutOrderLineItemsInput: ["where", "create"],
    ColorCreateWithoutOrderLineItemsInput: ["id", "name", "hex", "Products", "productIds", "createdAt", "updatedAt"],
    ColorCreateOrConnectWithoutOrderLineItemsInput: ["where", "create"],
    ArtworkCreateWithoutOrderLineItemsInput: ["id", "title", "description", "caption", "url", "Products", "productIds", "Inventory", "createdAt", "updatedAt"],
    ArtworkCreateOrConnectWithoutOrderLineItemsInput: ["where", "create"],
    SizeCreateWithoutOrderLineItemsInput: ["id", "value", "region", "Products", "productIds", "createdAt", "updatedAt"],
    SizeCreateOrConnectWithoutOrderLineItemsInput: ["where", "create"],
    OrderCreateWithoutItemsInput: ["id", "status", "SelectedShippingAddress", "SelectedShippingMethod", "SelectedPaymentType", "stripePaymentReference", "User", "createdAt", "updatedAt"],
    OrderCreateOrConnectWithoutItemsInput: ["where", "create"],
    PriceUpsertWithoutOrderLineItemsInput: ["update", "create"],
    PriceUpdateWithoutOrderLineItemsInput: ["priceInLowestDenomination", "displayPrice", "currency", "ShippingMethods", "Products", "createdAt", "updatedAt"],
    ProductUpsertWithoutOrderLineItemsInput: ["update", "create"],
    ProductUpdateWithoutOrderLineItemsInput: ["description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    ColorUpsertWithoutOrderLineItemsInput: ["update", "create"],
    ColorUpdateWithoutOrderLineItemsInput: ["name", "hex", "Products", "productIds", "createdAt", "updatedAt"],
    ArtworkUpsertWithoutOrderLineItemsInput: ["update", "create"],
    ArtworkUpdateWithoutOrderLineItemsInput: ["title", "description", "caption", "url", "Products", "productIds", "Inventory", "createdAt", "updatedAt"],
    SizeUpsertWithoutOrderLineItemsInput: ["update", "create"],
    SizeUpdateWithoutOrderLineItemsInput: ["value", "region", "Products", "productIds", "createdAt", "updatedAt"],
    OrderUpsertWithoutItemsInput: ["update", "create"],
    OrderUpdateWithoutItemsInput: ["status", "SelectedShippingAddress", "SelectedShippingMethod", "SelectedPaymentType", "stripePaymentReference", "User", "createdAt", "updatedAt"],
    AddressCreateWithoutOrdersInput: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "User", "createdAt", "updatedAt"],
    AddressCreateOrConnectWithoutOrdersInput: ["where", "create"],
    ShippingMethodCreateWithoutOrdersInput: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "price", "createdAt", "updatedAt"],
    ShippingMethodCreateOrConnectWithoutOrdersInput: ["where", "create"],
    UserCreateWithoutOrderInput: ["uid", "id", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserCreateOrConnectWithoutOrderInput: ["where", "create"],
    OrderLineItemCreateWithoutOrderInput: ["id", "lineItemPrice", "SelectedProduct", "SelectedColor", "SelectedArtwork", "SelectedSize", "createdAt", "updatedAt"],
    OrderLineItemCreateOrConnectWithoutOrderInput: ["where", "create"],
    OrderLineItemCreateManyOrderInputEnvelope: ["data"],
    AddressUpsertWithoutOrdersInput: ["update", "create"],
    AddressUpdateWithoutOrdersInput: ["type", "line1", "line2", "city", "district", "country", "code", "isDefault", "User", "createdAt", "updatedAt"],
    ShippingMethodUpsertWithoutOrdersInput: ["update", "create"],
    ShippingMethodUpdateWithoutOrdersInput: ["name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "price", "createdAt", "updatedAt"],
    UserUpsertWithoutOrderInput: ["update", "create"],
    UserUpdateWithoutOrderInput: ["uid", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    OrderLineItemUpsertWithWhereUniqueWithoutOrderInput: ["where", "update", "create"],
    OrderLineItemUpdateWithWhereUniqueWithoutOrderInput: ["where", "data"],
    OrderLineItemUpdateManyWithWhereWithoutOrderInput: ["where", "data"],
    AddressCreateManyUserInput: ["id", "type", "line1", "line2", "city", "district", "country", "code", "isDefault", "createdAt", "updatedAt"],
    PostCreateManyAuthorInput: ["id", "type", "caption", "mediaUrl", "isCommentsEnabled", "createdAt", "updatedAt"],
    CommentCreateManyAuthorInput: ["id", "text", "postId", "createdAt", "updatedAt"],
    ReplyCreateManyAuthorInput: ["id", "text", "commentId", "createdAt", "updatedAt"],
    ReactionCreateManyAuthorInput: ["id", "type", "postId", "commentId", "replyId", "createdAt", "updatedAt"],
    AddressUpdateWithoutUserInput: ["type", "line1", "line2", "city", "district", "country", "code", "isDefault", "Orders", "createdAt", "updatedAt"],
    UserUpdateWithoutFollowersInput: ["uid", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    UserUpdateWithoutFollowingInput: ["uid", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "followingIds", "Followers", "followerIds", "Order", "LikedProducts", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    ProductUpdateWithoutLikedByInput: ["description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    PostUpdateWithoutAuthorInput: ["type", "caption", "mediaUrl", "isCommentsEnabled", "Comments", "Reactions", "createdAt", "updatedAt"],
    CommentUpdateWithoutAuthorInput: ["text", "Post", "Replies", "Reactions", "createdAt", "updatedAt"],
    ReplyUpdateWithoutAuthorInput: ["text", "Comment", "Reactions", "createdAt", "updatedAt"],
    ReactionUpdateWithoutAuthorInput: ["type", "Post", "Comment", "Reply", "createdAt", "updatedAt"],
    ProductCreateManyInventoryInput: ["id", "description", "priceId", "availableQuantity", "photo", "gallery", "baseProductId", "artworkIds", "colorIds", "sizeIds", "likedByIds", "createdAt", "updatedAt"],
    ArtworkCreateManyInventoryInput: ["id", "title", "description", "caption", "url", "productIds", "createdAt", "updatedAt"],
    ProductUpdateWithoutInventoryInput: ["description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "createdAt", "updatedAt"],
    ArtworkUpdateWithoutInventoryInput: ["title", "description", "caption", "url", "Products", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    OrderCreateManySelectedShippingAddressInput: ["id", "status", "selectedShippingMethodId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt"],
    OrderUpdateWithoutSelectedShippingAddressInput: ["status", "SelectedShippingMethod", "SelectedPaymentType", "stripePaymentReference", "User", "Items", "createdAt", "updatedAt"],
    OrderLineItemCreateManySelectedArtworkInput: ["id", "priceId", "selectedProductId", "selectedColorId", "selectedSizeId", "orderId", "createdAt", "updatedAt"],
    ProductUpdateWithoutArtworkInput: ["description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    OrderLineItemUpdateWithoutSelectedArtworkInput: ["lineItemPrice", "SelectedProduct", "SelectedColor", "SelectedSize", "Order", "createdAt", "updatedAt"],
    OrderLineItemCreateManySelectedColorInput: ["id", "priceId", "selectedProductId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt"],
    ProductUpdateWithoutColorsInput: ["description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    OrderLineItemUpdateWithoutSelectedColorInput: ["lineItemPrice", "SelectedProduct", "SelectedArtwork", "SelectedSize", "Order", "createdAt", "updatedAt"],
    OrderLineItemCreateManySelectedSizeInput: ["id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "orderId", "createdAt", "updatedAt"],
    ProductUpdateWithoutSizesInput: ["description", "price", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "Colors", "colorIds", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    OrderLineItemUpdateWithoutSelectedSizeInput: ["lineItemPrice", "SelectedProduct", "SelectedColor", "SelectedArtwork", "Order", "createdAt", "updatedAt"],
    BrandProductCreateManyBrandInput: ["id", "name", "releaseYear", "description", "type", "category", "status", "createdAt", "updatedAt"],
    BrandProductUpdateWithoutBrandInput: ["name", "releaseYear", "description", "type", "category", "status", "Products", "createdAt", "updatedAt"],
    ProductCreateManyBaseProductInput: ["id", "description", "priceId", "availableQuantity", "photo", "gallery", "artworkIds", "colorIds", "sizeIds", "likedByIds", "inventoryId", "createdAt", "updatedAt"],
    ProductUpdateWithoutBaseProductInput: ["description", "price", "availableQuantity", "photo", "gallery", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    OrderLineItemCreateManySelectedProductInput: ["id", "priceId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt"],
    ArtworkUpdateWithoutProductsInput: ["title", "description", "caption", "url", "productIds", "Inventory", "OrderLineItems", "createdAt", "updatedAt"],
    ColorUpdateWithoutProductsInput: ["name", "hex", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    SizeUpdateWithoutProductsInput: ["value", "region", "productIds", "OrderLineItems", "createdAt", "updatedAt"],
    OrderLineItemUpdateWithoutSelectedProductInput: ["lineItemPrice", "SelectedColor", "SelectedArtwork", "SelectedSize", "Order", "createdAt", "updatedAt"],
    UserUpdateWithoutLikedProductsInput: ["uid", "username", "email", "roles", "firstName", "lastName", "avatar", "coverImage", "dateOfBirth", "hasAcceptedTerms", "isFirstTimeUser", "Addresses", "NotificationSettings", "Following", "followingIds", "Followers", "followerIds", "Order", "productIds", "Inventory", "Posts", "Comments", "Replies", "Reactions", "createdAt", "updatedAt"],
    PriceCreateManyCurrencyInput: ["id", "priceInLowestDenomination", "displayPrice", "createdAt", "updatedAt"],
    PriceUpdateWithoutCurrencyInput: ["priceInLowestDenomination", "displayPrice", "ShippingMethods", "Products", "OrderLineItems", "createdAt", "updatedAt"],
    ShippingMethodCreateManyPriceInput: ["id", "name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "createdAt", "updatedAt"],
    ProductCreateManyPriceInput: ["id", "description", "availableQuantity", "photo", "gallery", "baseProductId", "artworkIds", "colorIds", "sizeIds", "likedByIds", "inventoryId", "createdAt", "updatedAt"],
    OrderLineItemCreateManyLineItemPriceInput: ["id", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "orderId", "createdAt", "updatedAt"],
    ShippingMethodUpdateWithoutPriceInput: ["name", "description", "label", "arrivalTimeInBusinessDays", "arrivalTimeInBusinessDaysRang", "arrivalTimeDescription", "Orders", "createdAt", "updatedAt"],
    ProductUpdateWithoutPriceInput: ["description", "availableQuantity", "photo", "gallery", "BaseProduct", "Artwork", "artworkIds", "Colors", "colorIds", "Sizes", "sizeIds", "OrderLineItems", "LikedBy", "likedByIds", "Inventory", "createdAt", "updatedAt"],
    OrderLineItemUpdateWithoutLineItemPriceInput: ["SelectedProduct", "SelectedColor", "SelectedArtwork", "SelectedSize", "Order", "createdAt", "updatedAt"],
    OrderCreateManySelectedShippingMethodInput: ["id", "status", "selectedShippingAddressId", "SelectedPaymentType", "stripePaymentReference", "userId", "createdAt", "updatedAt"],
    OrderUpdateWithoutSelectedShippingMethodInput: ["status", "SelectedShippingAddress", "SelectedPaymentType", "stripePaymentReference", "User", "Items", "createdAt", "updatedAt"],
    CommentCreateManyPostInput: ["id", "text", "authorId", "createdAt", "updatedAt"],
    ReactionCreateManyPostInput: ["id", "type", "commentId", "replyId", "authorId", "createdAt", "updatedAt"],
    CommentUpdateWithoutPostInput: ["text", "Author", "Replies", "Reactions", "createdAt", "updatedAt"],
    ReactionUpdateWithoutPostInput: ["type", "Comment", "Reply", "Author", "createdAt", "updatedAt"],
    ReplyCreateManyCommentInput: ["id", "text", "authorId", "createdAt", "updatedAt"],
    ReactionCreateManyCommentInput: ["id", "type", "postId", "replyId", "authorId", "createdAt", "updatedAt"],
    ReplyUpdateWithoutCommentInput: ["text", "Author", "Reactions", "createdAt", "updatedAt"],
    ReactionUpdateWithoutCommentInput: ["type", "Post", "Reply", "Author", "createdAt", "updatedAt"],
    ReactionCreateManyReplyInput: ["id", "type", "postId", "commentId", "authorId", "createdAt", "updatedAt"],
    ReactionUpdateWithoutReplyInput: ["type", "Post", "Comment", "Author", "createdAt", "updatedAt"],
    OrderLineItemCreateManyOrderInput: ["id", "priceId", "selectedProductId", "selectedColorId", "selectedArtworkId", "selectedSizeId", "createdAt", "updatedAt"],
    OrderLineItemUpdateWithoutOrderInput: ["lineItemPrice", "SelectedProduct", "SelectedColor", "SelectedArtwork", "SelectedSize", "createdAt", "updatedAt"]
};
function applyInputTypesEnhanceMap(inputTypesEnhanceMap) {
    for (const inputTypeEnhanceMapKey of Object.keys(inputTypesEnhanceMap)) {
        const inputTypeName = inputTypeEnhanceMapKey;
        const typeConfig = inputTypesEnhanceMap[inputTypeName];
        const typeClass = inputTypes[inputTypeName];
        const typeTarget = typeClass.prototype;
        applyTypeClassEnhanceConfig(typeConfig, typeClass, typeTarget, inputsInfo[inputTypeName]);
    }
}
exports.applyInputTypesEnhanceMap = applyInputTypesEnhanceMap;
